<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BootstrapBlazor</name>
    </assembly>
    <members>
        <member name="T:BootstrapBlazor.Components.AlertBase">
            <summary>
            Alert 警告框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.Color">
            <summary>
            获得/设置 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ShowDismiss">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ShowBar">
            <summary>
            获得/设置 是否显示左侧 Bar
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ChildContent">
            <summary>
            子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.OnDismiss">
            <summary>
            关闭警告框回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoCompleteBase">
            <summary>
            AutoComplete 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.FilterItems">
            <summary>
            获得 最终候选数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.Items">
            <summary>
            获得/设置 通过输入字符串获得匹配数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.NoDataTip">
            <summary>
            获得/设置 无匹配数据时显示提示信息 默认提示"无匹配数据"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.IsLikeMatch">
            <summary>
            是否开启模糊查询，默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.IgnoreCase">
            <summary>
            匹配时是否忽略大小写，默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.CustomFilter">
            <summary>
            自定义集合过滤规则
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoCompleteBase.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoCompleteBase.ItemClassString(System.String)">
            <summary>
            获得 候选项样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoCompleteBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoCompleteBase.OnBlur">
            <summary>
            OnBlur 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoCompleteBase.OnItemClick(System.String)">
            <summary>
            鼠标点击候选项时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoCompleteBase.OnKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            OnKeyUp 方法
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.AvatarBase">
            <summary>
            Avatar 头像框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.ImgClassString">
            <summary>
            获得 图片样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.IsCircle">
            <summary>
            获得/设置 是否为圆形
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.Url">
            <summary>
            获得/设置 Image 头像路径地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.IsIcon">
            <summary>
            获得/设置 是否为图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.Icon">
            <summary>
            获得/设置 头像框显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.IsText">
            <summary>
            获得/设置 是否为显示为文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.Text">
            <summary>
            获得/设置 头像框显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.Size">
            <summary>
            获得/设置 头像框大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.IsBorder">
            <summary>
            获得/设置 是否显示 Border 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarBase.IsLoaded">
            <summary>
            获得/设置 是否显示图片
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarBase.OnError">
            <summary>
            图片加载失败时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarBase.OnLoad">
            <summary>
            图片加载成功时回调此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BadgeBase">
            <summary>
            Badge 徽章组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BadgeBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.BadgeBase.Color">
            <summary>
            获得/设置 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BadgeBase.IsPill">
            <summary>
            获得/设置 是否显示为胶囊形式
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.BadgeBase.ChildContent">
            <summary>
            子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BarcodeReader">
            <summary>
            BarcodeReader 条码扫描
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.ButtonScanText">
            <summary>
            获得/设置 扫描按钮文字 默认为 扫描
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.ButtonStopText">
            <summary>
            获得/设置 关闭按钮文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.AutoStopText">
            <summary>
            获得/设置 自动关闭文字 默认为 自动关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.DeviceLabel">
            <summary>
            获得/设置 设备列表前置标签文字 默认为 摄像头
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.InitDevicesString">
            <summary>
            获得/设置 初始化设备列表文字 默认为 正在识别摄像头
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.ScanType">
            <summary>
            获得/设置 扫描方式 默认 Camera 从摄像头进行条码扫描
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.OnInit">
            <summary>
            获得/设置 初始化摄像头回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.OnResult">
            <summary>
            获得/设置 扫码结果回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.AutoStop">
            <summary>
            获得/设置 扫描条码后自动关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.OnError">
            <summary>
            获得/设置 扫码出错回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.OnStart">
            <summary>
            获得/设置 开始扫码回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BarcodeReader.OnClose">
            <summary>
            获得/设置 关闭扫码回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.InitDevices(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.DeviceItem})">
            <summary>
            初始化设备方法
            </summary>
            <param name="devices"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.GetResult(System.String)">
            <summary>
            扫描完成回调方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.GetError(System.String)">
            <summary>
            扫描发生错误回调方法
            </summary>
            <param name="err"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.Start">
            <summary>
            开始扫描回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.Stop">
            <summary>
            停止扫描回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BarcodeReader.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DeviceItem">
            <summary>
            摄像头信息类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DeviceItem.DeviceId">
            <summary>
            获得/设置 设备 ID
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DeviceItem.Label">
            <summary>
            获得/设置 设备标签
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScanType">
            <summary>
            扫描方式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScanType.Camera">
            <summary>
            摄像头扫描
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScanType.Image">
            <summary>
            从图片扫描
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorOptions">
            <summary>
            Delay 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ToastDelay">
            <summary>
            获得/设置 Toast 组件 Delay 默认值 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.MessageDelay">
            <summary>
            获得/设置 Message 组件 Delay 默认值 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.SwalDelay">
            <summary>
            获得/设置 Swal 组件 Delay 默认值 默认为 0
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapComponentBase">
            <summary>
            Bootstrap Blazor 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.AdditionalAttributes">
            <summary>
            获得/设置 用户自定义属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.JSRuntime">
            <summary>
            获得/设置 IJSRuntime 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapComponentBase.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapComponentBase.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ConditionComponent">
            <summary>
            条件输出组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConditionComponent.Condition">
            <summary>
            获得/设置 是否显示 默认显示组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConditionComponent.ChildContent">
            <summary>
            获得/设置 子控件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConditionComponent.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            渲染组件方法
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIdGenerator">
            <summary>
            默认组件 ID 生成器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIdGenerator.Generate(Microsoft.AspNetCore.Components.ComponentBase)">
            <summary>
            生成组件 Id 字符串
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicComponent">
            <summary>
            动态组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicComponent.Parameters">
            <summary>
            获得/设置 组件参数集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicComponent.ComponentType">
            <summary>
            获得/设置 组件类型
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicComponent.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            构造函数
            </summary>
            <param name="componentType"></param>
            <param name="parameters">TCom 组件所需要的参数集合</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicComponent.CreateComponent``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            创建自定义组件方法
            </summary>
            <typeparam name="TCom"></typeparam>
            <param name="parameters">TCom 组件所需要的参数集合</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicComponent.CreateComponent``1">
            <summary>
            创建自定义组件方法
            </summary>
            <typeparam name="TCom"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicComponent.Render">
            <summary>
            创建组件实例并渲染
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicElement">
            <summary>
            动态元素组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TagName">
            <summary>
            获得/设置 TagName 属性 默认为 div
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TriggerClick">
            <summary>
            获得/设置 是否触发 Click 事件 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.OnClick">
            <summary>
            获得/设置 Click 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TriggerDoubleClick">
            <summary>
            获得/设置 是否触发 DoubleClick 事件 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.OnDoubleClick">
            <summary>
            获得/设置 DoubleClick 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.ChildContent">
            <summary>
            获得/设置 内容组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicElement.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            BuildRenderTree 方法
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IComponentIdGenerator">
            <summary>
            组件 ID 生成器接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IComponentIdGenerator.Generate(Microsoft.AspNetCore.Components.ComponentBase)">
            <summary>
            生成组件 Id 方法
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IdComponentBase">
            <summary>
            自动生成客户端 ID 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IdComponentBase.Id">
            <summary>
            获得/设置 组件 id 属性
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IdComponentBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IPopupHost">
            <summary>
            IPopupOption 接口定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopupHost.Host">
            <summary>
            获得/设置 弹窗主体实例 默认为空
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.JSInterop`1">
            <summary>
            JSInterop 类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JSInterop`1.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            构造函数
            </summary>
            <param name="jsRuntime"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSInterop`1.Invoke(`0,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Invoke 方法
            </summary>
            <param name="value"></param>
            <param name="el"></param>
            <param name="func"></param>
            <param name="method"></param>
            <param name="args"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSInterop`1.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSInterop`1.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopupOptionBase">
            <summary>
            弹窗类配置项基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.Content">
            <summary>
            获得/设置 Toast Body 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.IsAutoHide">
            <summary>
            获得/设置 是否自动隐藏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.Delay">
            <summary>
            获得/设置 自动隐藏时间间隔
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.ForceDelay">
            <summary>
            获得/设置 是否强制使用本实例的延时时间，防止值被全局配置覆盖 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopupServiceBase`1">
            <summary>
            弹窗类服务基类
            </summary>
            <typeparam name="TOption"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupServiceBase`1.Cache">
            <summary>
            获得 回调委托缓存集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopupServiceBase`1.Show(`0)">
            <summary>
            异步回调方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PopupServiceBase`1.Register(Microsoft.AspNetCore.Components.ComponentBase,System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            注册弹窗事件
            </summary>
            <param name="key"></param>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.PopupServiceBase`1.UnRegister(Microsoft.AspNetCore.Components.ComponentBase)">
            <summary>
            注销弹窗事件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectedItem">
            <summary>
            选项类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Active">
            <summary>
            获得/设置 是否选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TooltipComponentBase">
            <summary>
            提供 Tooltip 功能的组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipComponentBase.Tooltip">
            <summary>
            获得/设置 ITooltip 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.ShowTooltip">
            <summary>
            调用 $.bb_tooltip 脚本方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.ShowPopover">
            <summary>
            调用 $.bb_popover 脚本方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveId">
            <summary>
            获得 弹窗客户端 ID
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveMethod">
            <summary>
            获得 弹窗脚本执行方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveTitle">
            <summary>
            获得 弹窗标题方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveContent">
            <summary>
            获得 弹窗内容方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrievePlacement">
            <summary>
            获得 弹窗位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveIsHtml">
            <summary>
            获得 弹窗内容是否为 Html 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.RetrieveTrigger">
            <summary>
            获得 弹窗激活方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipComponentBase.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Breadcrumb">
            <summary>
            Breadcrumb 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Breadcrumb.Value">
            <summary>
            获得/设置 数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Breadcrumb.ActiveLink">
            <summary>
            获得/设置 面包屑渲染模式是否进行导航 默认 false 不进行导航
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BreadcrumbItem">
            <summary>
            BreadcrumbItem 实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BreadcrumbItem.Url">
            <summary>
            获得/设置 导航地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BreadcrumbItem.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BreadcrumbItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text"></param>
            <param name="url"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonBase">
            <summary>
            Button 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Disabled">
            <summary>
            获得 按钮 disabled 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Tab">
            <summary>
            获得 按钮 tabindex 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ButtonStyle">
            <summary>
            获得/设置 按钮风格枚举
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ButtonType">
            <summary>
            获得/设置 按钮类型 Submit 为表单提交按钮 Reset 为表单重置按钮 默认为 Button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.OnClick">
            <summary>
            获得/设置 OnClick 事件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.OnClickWithoutRender">
            <summary>
            获得/设置 OnClick 事件不刷新父组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsOutline">
            <summary>
            获得/设置 Outline 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Size">
            <summary>
            获得/设置 Size 大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsBlock">
            <summary>
            获得/设置 Block 模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ChildContent">
            <summary>
            获得/设置 RenderFragment 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.EditContext">
            <summary>
            获得 EditContext 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ValidateForm">
            <summary>
            获得 ValidateFormBase 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.SetDisable(System.Boolean)">
            <summary>
            设置按钮是否可用状态
            </summary>
            <param name="disable"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.PopConfirmButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopConfirmButtonBase">
            <summary>
            确认弹窗按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.PopoverService">
            <summary>
            获得/设置 PopoverConfirm 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Placement">
            <summary>
            获得/设置 弹窗显示位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Content">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnConfirm">
            <summary>
            获得/设置 点击确认时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnClose">
            <summary>
            获得/设置 点击关闭时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnBeforeClick">
            <summary>
            获得/设置 点击确认弹窗前回调方法 返回真时弹出弹窗 返回假时不弹出
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CloseButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮显示文字 默认为 确定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmIcon">
            <summary>
            获得/设置 确认框图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonBase.Show">
            <summary>
            显示确认弹窗方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Calendar">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.GetTitle">
            <summary>
            获得 当前日历框年月
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.WeekNumberText">
            <summary>
            获得 当前日历周文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnInitializedAsync">
            <summary>
            OnInitializedAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CalendarBase">
            <summary>
            Calendar 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.StartDate">
            <summary>
            获得/设置 日历框开始时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.GetWeekCount">
            <summary>
            获得 当前周数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.EndDate">
            <summary>
            获得/设置 日历框结束时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.ValueChanged">
            <summary>
            获得/设置 值改变时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.ViewModel">
            <summary>
            获得/设置 是否显示周视图 默认为 CalendarVieModel.Month 月视图
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarBase.ChildContent">
            <summary>
            获得/设置 周内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.OnInitialized">
            <summary>
            OnInitialized
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.OnCellClickCallback(System.DateTime)">
            <summary>
            选中日期时回调此方法
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.OnChangeMonth(System.Int32)">
            <summary>
            右侧快捷切换月按钮回调此方法
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.OnChangeWeek(System.Int32)">
            <summary>
            右侧快捷切换周按钮回调此方法
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.GetWeekDayString(System.Int32)">
            <summary>
            获得 周日期
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CalendarBase.GetWeekDayClassString(System.Int32)">
            <summary>
            获得 周日期样式
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Camera">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.ShowPreview">
            <summary>
            获得/设置 是否显示 照片预览
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.DeviceLabel">
            <summary>
            获得/设置 设备列表前置标签文字 默认为 摄像头
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.InitDevicesString">
            <summary>
            获得/设置 初始化设备列表文字 默认为 正在识别摄像头
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnInit">
            <summary>
            获得/设置 初始化摄像头回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnError">
            <summary>
            获得/设置 扫码出错回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnStart">
            <summary>
            获得/设置 开始扫码回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnClose">
            <summary>
            获得/设置 关闭扫码回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnCapture">
            <summary>
            获得/设置 开始扫码回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.InitDevices(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.DeviceItem})">
            <summary>
            初始化设备方法
            </summary>
            <param name="devices"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.GetError(System.String)">
            <summary>
            扫描发生错误回调方法
            </summary>
            <param name="err"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Start">
            <summary>
            开启摄像头回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Stop">
            <summary>
            停止摄像头回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Capture">
            <summary>
            拍照回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Captcha">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.CaptchaElement">
            <summary>
            获得/设置 Captcha DOM 元素实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.HeaderText">
            <summary>
            获得/设置 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.BarText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.FailedText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.LoadText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.TryText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.Reset">
            <summary>
            重置组件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CaptchaBase">
            <summary>
            Captcha 滑块验证码组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.StyleString">
            <summary>
            获得 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.FailedStyle">
            <summary>
            获得 加载图片失败样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.OnValid">
            <summary>
            获得/设置 验证码结果回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.ImagesPath">
            <summary>
            获得/设置 图床路径 默认值为 images
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.ImagesName">
            <summary>
            获得/设置 图床路径 默认值为 Pic.jpg
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.GetImageName">
            <summary>
            获得/设置 获取背景图方法委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.Offset">
            <summary>
            获得/设置 容错偏差
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.Width">
            <summary>
            获得/设置 图片宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaBase.Height">
            <summary>
            获得/设置 图片高度
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CaptchaBase.OnAfterRender(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CaptchaBase.Verify(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            清除 ToastBox 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CaptchaBase.GetCaptchaOption">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CaptchaBase.OnClickRefresh">
            <summary>
            点击刷新按钮时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CaptchaBase.Reset">
            <summary>
            重置组件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CaptchaOption">
            <summary>
            Captcha 滑块验证码组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Width">
            <summary>
            获得/设置 验证码图片宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Height">
            <summary>
            获得/设置 验证码图片高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.SideLength">
            <summary>
            获得/设置 拼图边长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Diameter">
            <summary>
            获得/设置 拼图直径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.OffsetX">
            <summary>
            获得/设置 拼图 X 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.OffsetY">
            <summary>
            获得/设置 拼图 Y 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.BarWidth">
            <summary>
            获得/设置 拼图宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.ImageUrl">
            <summary>
            获得/设置 拼图背景图片路径
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CardBase">
            <summary>
            Card组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.ClassName">
            <summary>
             Card组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.BodyClassName">
            <summary>
             设置Body Class组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.FooterClassName">
            <summary>
            设置Footer Class样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.Class">
            <summary>
            设置Class样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.CardHeader">
            <summary>
            获得/设置 CardHeard
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.CardBody">
            <summary>
            获得/设置 CardBody
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.CardFooter">
            <summary>
            获得/设置 CardFooter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.Color">
            <summary>
            获得/设置Card颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardBase.IsCenter">
            <summary>
            设置是否居中
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Carousel">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CarouselBase">
            <summary>
            CarouselBase 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.TargetId">
            <summary>
            获得 data-target 属性值
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.StyleName">
            <summary>
            获得 Style 样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CarouselBase.CheckActive(System.Int32,System.String)">
            <summary>
            检查是否 active
            </summary>
            <param name="index"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.Images">
            <summary>
            获得 Images 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.Width">
            <summary>
            获得/设置 内部图片的宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.IsFade">
            <summary>
            获得/设置 是否采用淡入淡出效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselBase.OnClick">
            <summary>
            获得/设置 点击 Image 回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CarouselBase.OnClickImage(System.String)">
            <summary>
            点击 Image 是触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CarouselImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselImage.ImageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselImage.OnClick">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxBase`1">
            <summary>
            BootstrapInputTextBase 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.ClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.StateString">
            <summary>
            获得 复选框状态字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.isBoolean">
            <summary>
            判断双向绑定类型是否为 boolean 类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.ShowAfterLabel">
            <summary>
            获得/设置 是否显示 Checkbox 后置 label 文字 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.State">
            <summary>
            获得/设置 选择框状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.StateChanged">
            <summary>
            State 状态改变回调方法
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxBase`1.OnStateChanged">
            <summary>
            获得/设置 选择框状态改变时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxBase`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxBase`1.OnAfterRender(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxBase`1.OnToggleClick">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxBase`1._stateChanged">
            <summary>
            此变量为了提高性能，避免循环更新
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxBase`1.SetState(BootstrapBlazor.Components.CheckboxState)">
            <summary>
            设置 复选框状态方法
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxListBase`2">
            <summary>
            CheckboxList 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.CheckboxItemClassString">
            <summary>
            获得 组件内部 Checkbox 项目样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.CheckboxItemClass">
            <summary>
            获得/设置 Checkbox 组件布局样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.TextField">
            <summary>
            获得/设置 显示列字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.ValueField">
            <summary>
            获得/设置 数值列字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.CheckedField">
            <summary>
            获得/设置 是否选中列字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.OnSelectedChanged">
            <summary>
            获得/设置 SelectedItemChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.ValueAsString">
            <summary>
            获得/设置 所有选中的子项以逗号分隔的字符串 如 "Value1,Value2"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListBase`2.ValueAsStringChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListBase`2.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListBase`2.OnStateChanged(`0,System.Boolean)">
            <summary>
            Checkbox 组件选项状态改变时触发此方法
            </summary>
            <param name="item"></param>
            <param name="v"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListBase`2.GetValue``1(`0)">
            <summary>
            获得 组件数值
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListBase`2.GetDisplayText(`0)">
            <summary>
            获得 Checkbox 组件显示名称方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListBase`2.GetChecked(`0)">
            <summary>
            获得 Checkbox 组件状态方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Circle">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.Value">
            <summary>
            获得/设置 当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.ValueString">
            <summary>
            获得/设置 当前进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.ValueTitleString">
            <summary>
            获得/设置 Title 字符串
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CircleBase">
            <summary>
            Circle 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.PrevStyleString">
            <summary>
            获得 预览框 Style 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ProgressClassString">
            <summary>
            获得 进度条样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.TitleClassString">
            <summary>
            获得 进度条百分比样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.DashString">
            <summary>
            获得/设置 Dash 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleDiameter">
            <summary>
            获得/设置 圆形进度半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleR">
            <summary>
            获得/设置 半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleLength">
            <summary>
            获得 圆形周长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.StrokeWidth">
            <summary>
            获得/设置 进度条宽度 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.Color">
            <summary>
            获得/设置 组件进度条颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ShowProgress">
            <summary>
            获得/设置 是否显示进度百分比 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CircleBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CollapseBase">
            <summary>
            Collapse 折叠组件基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseBase.GetButtonClassString(System.Boolean)">
            <summary>
            
            </summary>
            <param name="collapsed"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseBase.GetClassString(System.Boolean)">
            <summary>
            
            </summary>
            <param name="collpased"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.ClassString">
            <summary>
            获得 按钮样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.CollapseElement">
            <summary>
            获得/设置 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.Items">
            <summary>
            获得/设置 CollapseItem 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.ShowArrow">
            <summary>
            获得/设置 指示箭头 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseBase.CollapseItems">
            <summary>
            获得/设置 CollapseItems 模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseBase.AddItem(BootstrapBlazor.Components.CollapseItem)">
            <summary>
            添加 TabItem 方法 由 TabItem 方法加载时调用
            </summary>
            <param name="item">TabItemBase 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseBase.OnItemClick(BootstrapBlazor.Components.CollapseItem)">
            <summary>
            点击 TabItem 时回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.CollapseItem">
            <summary>
            CollapseItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Text">
            <summary>
            获得/设置 文本文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.IsCollapsed">
            <summary>
            获得/设置 当前状态是否激活
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Icon">
            <summary>
            获得/设置 图标字符串 如 "fa fa"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Collpase">
            <summary>
            获得/设置 所属 Collapse 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.SetCollapsed(System.Boolean)">
            <summary>
            设置是否被选中方法
            </summary>
            <param name="collapsed"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Console">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ConsoleElement">
            <summary>
            获得 Console 组件客户端引用实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ConsoleBase">
            <summary>
            Console 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.BodyStyleString">
            <summary>
            获得 Console Body Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.FooterClassString">
            <summary>
            获得 Footer 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ClearButtonClassString">
            <summary>
            获得 按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.AutoScrollClassString">
            <summary>
            获得 客户端是否自动滚屏样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.AutoScrollString">
            <summary>
            获得 客户端是否自动滚屏标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.Items">
            <summary>
            获得/设置 组件绑定数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.HeaderText">
            <summary>
            获得/设置 Header 显示文字 默认值为 系统监控
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.LightTitle">
            <summary>
            获得/设置 指示灯 Title 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.AutoScrollText">
            <summary>
            获得/设置 自动滚屏显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ShowAutoScroll">
            <summary>
            获得/设置 是否显示自动滚屏选项 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.IsAutoScroll">
            <summary>
            获得/设置 是否自动滚屏默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ClearButtonText">
            <summary>
            获得/设置 按钮 显示文字 默认值为 清屏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ClearButtonIcon">
            <summary>
            获得/设置 按钮 显示图标 默认值为 fa-times
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.ClearButtonColor">
            <summary>
            获得/设置 按钮 显示图标 默认值为 fa-times
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.OnClear">
            <summary>
            获得/设置 清空委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleBase.Height">
            <summary>
            获得/设置 组件高度 默认为 126px;
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleBase.ClickAutoScroll">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleBase.GetClassString(BootstrapBlazor.Components.ConsoleMessageItem)">
            <summary>
            获取消息样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleBase.ClearConsole">
            <summary>
            清空控制台消息方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ConsoleMessageItem">
            <summary>
            控制台消息实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.Message">
            <summary>
            获得/设置 控制台输出消息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.Color">
            <summary>
            获得/设置 控制台消息颜色 默认为 White 白色
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerBody">
            <summary>
            日期选择组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.StartDate">
            <summary>
            获得/设置 日历框开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.EndDate">
            <summary>
            获得/设置 日历框结束时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentDate">
            <summary>
            获得/设置 当前日历框月份
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowTimePicker">
            <summary>
            获得/设置 是否显示时刻选择框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ClassName">
            <summary>
            获得/设置 组件样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetDayClass(System.DateTime)">
            <summary>
            获得/设置 日期样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateTimeViewClassName">
            <summary>
            获得 年月日时分秒视图样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.PrevMonthClassName">
            <summary>
            获得 上一月按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NextMonthClassName">
            <summary>
            获得 下一月按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.YearViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MonthViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentMonthViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.YearString">
            <summary>
            获得 年显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateValueString">
            <summary>
            获得 日期数值字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.TimeValueString">
            <summary>
            获得 日期数值字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentViewModel">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ViewModel">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateFormat">
            <summary>
            获得/设置 日期格式字符串 默认为 "yyyy-MM-dd"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowSidebar">
            <summary>
            获得/设置 是否显示快捷侧边栏 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowLeftButtons">
            <summary>
            获得/设置 是否显示左侧控制按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowRightButtons">
            <summary>
            获得/设置 是否显示右侧控制按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 区域 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.TimeFormat">
            <summary>
            获得/设置 时间格式字符串 默认为 "hh\\:mm\\:ss"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.TimePlaceHolder">
            <summary>
            获得/设置 时间 PlaceHolder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DatePlaceHolder">
            <summary>
            获得/设置 日期 PlaceHolder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.IsShown">
            <summary>
            获得/设置 是否显示本组件默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.AllowNull">
            <summary>
            获得/设置 是否允许为空 默认 false 不允许为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnConfirm">
            <summary>
            获得/设置 确认按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnClear">
            <summary>
            获得/设置 确认按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ClearButtonText">
            <summary>
            获得/设置 清空按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NowButtonText">
            <summary>
            获得/设置 此刻按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ValueChanged">
            <summary>
            获得/设置 组件值改变时回调委托供双向绑定使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MaxValue">
            <summary>
            获得/设置 当前日期最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MinValue">
            <summary>
            获得/设置 当前日期最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.Ranger">
            <summary>
            获得/设置 是否为 Range 内使用 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickPrevYear">
            <summary>
            点击上一年按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickPrevMonth">
            <summary>
            点击上一月按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickNextYear">
            <summary>
            点击下一年按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickNextMonth">
            <summary>
            点击下一月按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickDateTime(System.DateTime)">
            <summary>
            Day 选择时触发此方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.SwitchView(BootstrapBlazor.Components.DatePickerViewModel)">
            <summary>
            设置组件显示视图方法
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.SwitchView(BootstrapBlazor.Components.DatePickerViewModel,System.DateTime)">
            <summary>
            设置组件显示视图方法
            </summary>
            <param name="view"></param>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearPeriod">
            <summary>
            通过当前时间计算年跨度区间
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYear(System.Int32)">
            <summary>
            获取 年视图下的年份
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearText(System.Int32)">
            <summary>
            获取 年视图下月份单元格显示文字
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearClassName(System.Int32)">
            <summary>
            获取 年视图下的年份单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonth(System.Int32)">
            <summary>
            获取 年视图下的月份
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonthClassName(System.Int32)">
            <summary>
            获取 月视图下的月份单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetDayText(System.Int32)">
            <summary>
            获取 日视图下日单元格显示文字
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonthText(System.Int32)">
            <summary>
            获取 月视图下月份单元格显示文字
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickTimeInput">
            <summary>
            时刻选择框点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClickNowButton">
            <summary>
            点击 此刻时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClickClearButton">
            <summary>
            点击 清除按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClickConfirmButton">
            <summary>
            点击 确认时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnTimePickerClose">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerCell">
            <summary>
            DateTimePickerCell 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.Value">
            <summary>
            获得/设置 日期
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.Text">
            <summary>
            获得/设置 日期
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.OnClick">
            <summary>
            获得/设置 按钮点击回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimePicker`1">
            <summary>
            DateTimePicker 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ClassString">
            <summary>
            获得 组件样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.InputClassName">
            <summary>
            获得 组件文本框样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DateTimePickerIconClassString">
            <summary>
            获得 组件小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.PlacementString">
            <summary>
            获得 组件弹窗位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.PlaceholderString">
            <summary>
            获得 Placeholder 显示字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.AllowNull">
            <summary>
            获得/设置 是否允许为空 默认 false 不允许为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ComponentValue">
            <summary>
            获得/设置 组件时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Picker">
            <summary>
            获得 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Format">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "yyyy-MM-dd"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Placement">
            <summary>
            获得/设置 弹窗位置 默认为 Auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ViewModel">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowSidebar">
            <summary>
            获得/设置 是否显示快捷侧边栏 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.MaxValue">
            <summary>
            获得/设置 当前日期最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.MinValue">
            <summary>
            获得/设置 当前日期最小值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnInitialized">
            <summary>
            OnInitialized
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.FormatValueAsString(`0)">
            <summary>
            格式化数值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnClear">
            <summary>
            清空按钮点击时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnConfirm">
            <summary>
            确认按钮点击时回调此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerBody">
            <summary>
            TimePicker 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.TimePickerElement">
            <summary>
            获得 组件客户端 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.CurrentTime">
            <summary>
            获得/设置 当前时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.ClassName">
            <summary>
            获得/设置 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.Value">
            <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
            <example>
            @bind-Value="model.PropertyName"
            </example>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.ValueChanged">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.CancelButtonText">
            <summary>
            获得/设置 取消按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.ItemHeightCallback">
            <summary>
            获得/设置 时间刻度行高
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.OnClose">
            <summary>
            获得/设置 取消按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerBody.OnConfirm">
            <summary>
            获得/设置 确认按钮回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerBody.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerBody.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerBody.OnClickClose">
            <summary>
            点击取消按钮回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerBody.OnClickConfirm">
            <summary>
            点击确认按钮时回调此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerCell">
            <summary>
            时间选择滚轮单元组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.GetClassName(System.Int32)">
            <summary>
            获得 当前样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.Range">
            <summary>
            获得 滚轮单元数据区间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.StyleName">
            <summary>
            获得 组件单元数据样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.ViewModel">
            <summary>
            获得/设置 时间选择框视图模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.ValueChanged">
            <summary>
            获得/设置 组件值变化时委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.ItemHeightCallback">
            <summary>
            获得/设置 时间刻度行高
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnClickUp">
            <summary>
            上翻页按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnClickDown">
            <summary>
            下翻页按钮调用此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.PickerRange">
            <summary>
            获得 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ClassString">
            <summary>
            获得 组件样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.BodyClassString">
            <summary>
            获得 组件弹窗样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.PlacementString">
            <summary>
            获得 组件弹窗位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.DateTimePickerIconClassString">
            <summary>
            获得 组件小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.SelectedValue">
            <summary>
            获得 用户选中的时间范围
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ClearButtonText">
            <summary>
            获得/设置 清空按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.Placement">
            <summary>
            获得/设置 弹窗位置 默认为 Auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.IsShown">
            <summary>
            获得/设置 是否显示本组件默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.AllowNull">
            <summary>
            获得/设置 是否允许为空 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.OnConfirm">
            <summary>
            点击确认按钮回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.OnClearValue">
            <summary>
            点击情况按钮回调委托方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.OnInitialized">
            <summary>
            OnInitialized
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.ClickClearButton">
            <summary>
            点击 清除按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.ClickConfirmButton">
            <summary>
            点击 确认时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.UpdateStart(System.DateTime)">
            <summary>
            更新年时间方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.UpdateEnd(System.DateTime)">
            <summary>
            更新年时间方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.UpdateValue(System.DateTime)">
            <summary>
            更新值方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRangeValue">
            <summary>
            DateTimeRangeValue 对象
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.Start">
            <summary>
            获得/设置 开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.End">
            <summary>
            获得/设置 结束时间
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Dialog">
            <summary>
            Dialog 对话框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dialog.ModalContainer">
            <summary>
            获得/设置 Modal 容器组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dialog.ModalDialog">
            <summary>
            获得/设置 弹出对话框实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dialog.DialogService">
            <summary>
            DialogServices 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogOption">
            <summary>
            Dialog 组件配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Dialog">
            <summary>
            获得/设置 相关弹窗实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Title">
            <summary>
            获得/设置 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Size">
            <summary>
            获得/设置 弹窗大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsCentered">
            <summary>
            获得/设置 是否垂直居中 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsScrolling">
            <summary>
            获得/设置 是否弹窗正文超长时滚动 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.BodyContext">
            <summary>
            获得/设置 相关连数据，多用于传值使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.BodyTemplate">
            <summary>
            获得/设置 ModalBody 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.FooterTemplate">
            <summary>
            获得/设置 ModalFooter 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.KeepChildrenState">
            <summary>
            获得/设置 是否保持弹窗内组件状态 默认为 false 不保持
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Component">
            <summary>
            获得/设置 自定义组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogOption.ToAttributes">
            <summary>
            将参数转换为组件属性方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogService">
            <summary>
            Dialog 组件服务
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DividerBase">
            <summary>
            Divider 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.ClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.TextClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.AdditionalAttributes">
            <summary>
            获得/设置 用户自定义属性
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.IsVertical">
            <summary>
            获得/设置 是否为垂直显示 默认为 false 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.Alignment">
            <summary>
            获得/设置 组件对齐方式 默认为居中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.Text">
            <summary>
            获得/设置 文案显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.Icon">
            <summary>
            获得/设置 文案显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DividerBase.ChildContent">
            <summary>
            获得/设置 子内容
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerBase">
            <summary>
            Drawer 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.DrawerStyleString">
            <summary>
            获得 抽屉 Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.DrawerClassString">
            <summary>
            获得 抽屉样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.Width">
            <summary>
            获得/设置 抽屉宽度 左右布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.Height">
            <summary>
            获得/设置 抽屉高度 上下布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.IsOpen">
            <summary>
            获得/设置 抽屉是否打开 默认 false 未打开
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.IsOpenChanged">
            <summary>
            获得/设置 IsOpen 属性改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.OnClickBackdrop">
            <summary>
            获得/设置 点击背景遮罩时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.IsBackdrop">
            <summary>
            获得/设置 点击遮罩是否关闭抽屉
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.Placement">
            <summary>
            获得/设置 组件出现位置 默认显示在 Left 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerBase.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerBase.OnContainerClick">
            <summary>
            点击背景遮罩方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DropdownBase`1">
            <summary>
            下拉框组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.DirectionClassName">
            <summary>
            获得 按钮弹出方向集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.ButtonClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.DropdownToggle">
            <summary>
            获得 是否分裂式按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.MenuAlignmentClass">
            <summary>
            菜单对齐方式样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.ShowSplit">
            <summary>
            是否开启分裂式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.MenuAlignment">
            <summary>
            获取菜单对齐方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.Direction">
            <summary>
            下拉选项方向 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.Size">
            <summary>
            组件尺寸
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownBase`1.DropdownType">
            <summary>
            下拉框渲染类型
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DropdownListBase`2">
            <summary>
            DropdownListBase 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.ArrowClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.ActiveItem(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            设置当前项是否 Active 方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.InputId">
            <summary>
            获得/设置 Select 内部 Input 组件 Id
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.ActiveItem(`0)">
            <summary>
            设置当前项是否 Active 方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.CurrentItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.Data">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.TextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.ValueField">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownListBase`2.OnSelectedItemChanged">
            <summary>
            SelectedItemChanged 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.OnParametersSet">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.OnItemClick(`0)">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.GetValue(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownListBase`2.GetText(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Editor">
            <summary>
            Editor 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.EditorElement">
            <summary>
            获得/设置 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.Interope">
            <summary>
            获得/设置 JSInterop 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.EditClassString">
            <summary>
            获得 Editor 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.PlaceHolder">
            <summary>
            获得/设置 Placeholder 提示消息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.IsEditor">
            <summary>
            获得/设置 是否直接显示为富文本编辑框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.Height">
            <summary>
            获得/设置 设置组件高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.ToolbarItems">
            <summary>
            获得/设置 富文本框工具栏工具，默认为空使用默认值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.CustomerPluginItems">
            <summary>
            获得/设置 自定义按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.ValueChanged">
            <summary>
            获得/设置 组件值变化后的回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Editor.OnClickPluginItem">
            <summary>
            获取/设置 插件点击时的回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.Update(System.String)">
            <summary>
            Update 方法
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.GetToolBar">
            <summary>
            获取编辑器的 toolbar
            </summary>
            <returns>toolbar</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.GetPluginAttrs">
            <summary>
            获取插件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.ClickPluginItem(System.String)">
            <summary>
            插件点击事件
            </summary>
            <param name="pluginItemName">插件名</param>
            <returns>插件回调的文本</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Editor.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorPluginItem">
            <summary>
            富文本框插件信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorPluginItem.PluginItemName">
            <summary>
            获取或设置 插件名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorPluginItem.IconClass">
            <summary>
            获取或设置 插件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorPluginItem.Tooltip">
            <summary>
            获取或设置 插件的提示信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorForm`1">
            <summary>
            编辑表单基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.FieldItems">
            <summary>
            获得/设置 列模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.Buttons">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.Model">
            <summary>
            获得/设置 绑定模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ShowLabel">
            <summary>
            获得/设置 是否显示前置标签 默认为 true 显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.AutoGenerateAllItem">
            <summary>
            获得/设置 是否自动生成模型的所有属性 默认为 true 生成所有属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.CascadedEditContext">
            <summary>
            获得/设置 级联上下文 EditContext 实例 内置于 EditForm 或者 ValidateForm 时有值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.CascadeEditorItems">
            <summary>
            获得/设置 级联上下文绑定字段信息集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.EditorItems">
            <summary>
            获得/设置 配置编辑项目集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.FormItems">
            <summary>
            获得/设置 渲染的编辑项集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.FirstRender">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.AutoGenerateTemplate(BootstrapBlazor.Components.IEditorItem)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.CreateCallback``1(`0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="TType"></typeparam>
            <param name="model"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorItem`1">
            <summary>
            EditorItem 组件
            </summary>
            <remarks>用于 EditorForm 的 FieldItems 模板内</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.Field">
            <summary>
            获得/设置 绑定字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.FieldChanged">
            <summary>
            获得/设置 绑定字段值变化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.FieldType">
            <summary>
            获得/设置 绑定列类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.FieldExpression">
            <summary>
            获得/设置 ValueExpression 表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.Editable">
            <summary>
            获得/设置 当前列是否可编辑 默认为 true 当设置为 false 时自动生成编辑 UI 不生成此列
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.Readonly">
            <summary>
            获得/设置 当前列编辑时是否为只读模式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.Text">
            <summary>
            获得/设置 表头显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.EditTemplate">
            <summary>
            获得/设置 编辑模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.Order">
            <summary>
            获得/设置 显示顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`1.EditorItems">
            <summary>
            获得/设置 IEditorItem 集合实例
            </summary>
            <remarks>EditorForm 组件级联传参下来的值</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`1.GetDisplayName">
            <summary>
            获取绑定字段显示名称方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`1.GetFieldName">
            <summary>
            获取绑定字段信息方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorOrderAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorOrderAttribute.Order">
            <summary>
            获得 Order 属性
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorOrderAttribute.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="order"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IEditorItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.FieldType">
            <summary>
            获得/设置 绑定列类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Editable">
            <summary>
            获得/设置 当前列是否可编辑 默认为 true 当设置为 false 时自动生成编辑 UI 不生成此列
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Readonly">
            <summary>
            获得/设置 当前列编辑时是否只读 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Text">
            <summary>
            获得/设置 表头显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.EditTemplate">
            <summary>
            获得/设置 编辑模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItem.GetDisplayName">
            <summary>
            获取绑定字段显示名称方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItem.GetFieldName">
            <summary>
            获取绑定字段信息方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1">
            <summary>
            IEditorItem 内部实现类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.Model">
            <summary>
            获得/设置 绑定数据模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.FieldType">
            <summary>
            获得/设置 字段数据类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.FieldName">
            <summary>
            获得/设置 绑定字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.Editable">
            <summary>
            获得/设置 是否可以编辑 默认为 true 可编辑
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.Readonly">
            <summary>
            获得/设置 是否只读
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.Text">
            <summary>
            获得/设置 表头显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.EditTemplate">
            <summary>
            获得/设置 编辑模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.#ctor(`0,System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="propertyInfo"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.GetDisplayName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm.InternalEditorItem`1.GetFieldName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FooterBase">
            <summary>
            Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FooterBase.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.FooterBase.Text">
            <summary>
            获得/设置 Footer 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FooterBase.Target">
            <summary>
            获得/设置 Footer 组件中返回顶端按钮控制的滚动条所在组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputBase`1">
            <summary>
            BootstrapInputTextBase 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.Type">
            <summary>
            获得/设置 input 类型 text password number
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.IsGroup">
            <summary>
            获得/设置 是否为 Input-Group 组合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.Formatter">
            <summary>
            获得/设置 格式化字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.FormatValueAsString(`0)">
            <summary>
            数值格式化委托方法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputNumberBase`1">
            <summary>
            InputNumber 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.ButtonClassString">
            <summary>
            获得 按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.InputClassString">
            <summary>
            获得 文本框样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Step">
            <summary>
            获得/设置 数值步进步长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnIncrement">
            <summary>
            获得/设置 数值增加时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnDecrement">
            <summary>
            获得/设置 数值减少时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Min">
            <summary>
            获得/设置 最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Max">
            <summary>
            获得/设置 最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.ShowButton">
            <summary>
            获得/设置 是否显示加减按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnClickDec">
            <summary>
            点击减少按钮式时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnClickInc">
            <summary>
            点击增加按钮式时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.OnBlur">
            <summary>
            失去焦点是触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Range(`0)">
            <summary>
            通过 MinValue 与 MaxValue 区间判断当前值方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.SetStep">
            <summary>
            设置默认步长方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.SetRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumberBase`1.TryParseCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.TryParse(System.String,`0@)">
            <summary>
            TryParse 泛型方法
            </summary>
            <param name="source"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.LessThan">
            <summary>
            泛型中的大于逻辑判断
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.LessThanOrEqual(`0,`0)">
            <summary>
            小于判断方法 v1 &lt; v2
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Add">
            <summary>
            V++
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.Subtract">
            <summary>
            V--
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.GoTop">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.Target">
            <summary>
            获得/设置 滚动条所在组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.TooltipText">
            <summary>
            获得/设置 鼠标悬停提示文字信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.GoTop.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.GoTop.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Layout">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TooltipText">
            <summary>
            获得/设置 鼠标悬停提示文字信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LayoutBase">
            <summary>
            Layout 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsSmallScreen">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.FooterClassString">
            <summary>
            获得 页脚样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.HeaderClassString">
            <summary>
            获得 页头样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.SideClassString">
            <summary>
            获得 侧边栏样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.SideStyleString">
            <summary>
            获得 侧边栏 Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.MainClassString">
            <summary>
            获得 Main 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.CollapseBarClassString">
            <summary>
            获得 展开收缩 Bar 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsCollapsed">
            <summary>
            获得/设置 侧边栏状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.Header">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.Footer">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.Side">
            <summary>
            获得/设置 Side 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.SideWidth">
            <summary>
            获得/设置 Footer 高度 支持百分比 默认宽度为 300px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.Main">
            <summary>
            获得/设置 Main 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsDark">
            <summary>
            获得/设置 是否为暗黑模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsFullSide">
            <summary>
            获得/设置 侧边栏是否占满整个左侧 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsPage">
            <summary>
            获得/设置 是否为正页面布局 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.Menus">
            <summary>
            获得/设置 侧边栏菜单集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsFixedFooter">
            <summary>
            获得/设置 是否固定 Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.IsFixedHeader">
            <summary>
            获得/设置 是否固定 Header 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.ShowCollapseBar">
            <summary>
            获得/设置 是否显示收缩展开 Bar
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.ShowGotoTop">
            <summary>
            获得/设置 是否显示返回顶端按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.OnClickMenu">
            <summary>
            获得/设置 点击菜单时回调委托方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutBase.OnCollapsed">
            <summary>
            获得/设置 收缩展开回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutBase.CollapseMenu">
            <summary>
            点击 收缩展开按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutBase.ClickMenu(BootstrapBlazor.Components.MenuItem)">
            <summary>
            点击菜单时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutBase.SetCollapsed(System.Int32)">
            <summary>
            设置 请求头方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutBase.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LightBase">
            <summary>
            Light 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LightBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LightBase.IsFlash">
            <summary>
            获得/设置 组件是否闪烁 默认为 false 不闪烁
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LightBase.Title">
            <summary>
            获得/设置 指示灯 Tooltip 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LightBase.Color">
            <summary>
            获得/设置 指示灯颜色 默认为 Success 绿色
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ListView`1">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:BootstrapBlazor.Components.ListViewBase`1">
            <summary>
            ListView 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.ClassName">
            <summary>
             Card组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.HeaderTemplate">
            <summary>
            获得/设置 CardHeard
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.BodyTemplate">
            <summary>
            获得/设置 CardBody
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.FooterTemplate">
            <summary>
            获得/设置 CardFooter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.Pageable">
            <summary>
            获得/设置 是否分页 默认为 false 不分页
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.PageItemsSource">
            <summary>
            获得/设置 每页显示数据数量的外部数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.OnQueryAsync">
            <summary>
            异步查询回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.OnListViewItemClick">
            <summary>
            获得/设置 ListView组件元素点击时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.TotalCount">
            <summary>
            获得/设置 数据总条目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.PageIndex">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListViewBase`1.PageItems">
            <summary>
            获得/设置 每页数据数量
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.OnInitializedAsync">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.OnPageClick(System.Int32,System.Int32)">
            <summary>
            点击页码调用此方法
            </summary>
            <param name="pageIndex"></param>
            <param name="pageItems"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.OnPageItemsChanged(System.Int32)">
            <summary>
            每页记录条数变化是调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.QueryAsync">
            <summary>
            查询按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.QueryData">
            <summary>
            调用 OnQuery 回调方法获得数据源
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListViewBase`1.OnClick(`0)">
            <summary>
            点击元素事件
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Menu">
            <summary>
            Menu 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsVertical">
            <summary>
            获得/设置 侧栏垂直模式
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsCollapsed">
            <summary>
            获得/设置 侧栏是否收起 默认 false 未收起
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.DisableNavigation">
            <summary>
            获得/设置 是否禁止导航 默认为 false 允许导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.Navigator">
            <summary>
            获得/设置 NavigationManager 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.CascadingSetActive(BootstrapBlazor.Components.MenuItem)">
            <summary>
            根据当前路径设置菜单激活状态
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MenuItem">
            <summary>
            MenuItem 组件
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MenuItem._items">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Parent">
            <summary>
            获得 父级菜单
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Text">
            <summary>
            获得/设置 导航菜单文本内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Url">
            <summary>
            获得/设置 导航菜单链接地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.IsActive">
            <summary>
            获得/设置 是否激活
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.IsCollapsed">
            <summary>
            获得/设置 是否收缩 默认收缩
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false 未禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Icon">
            <summary>
            获得/设置 图标字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Component">
            <summary>
            获得/设置 菜单内子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.AddItem(BootstrapBlazor.Components.MenuItem)">
            <summary>
            添加 Menutem 方法 由 MenuItem 方法加载时调用
            </summary>
            <param name="item">Menutem 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.CascadingSetActive(BootstrapBlazor.Components.MenuItem,System.Boolean)">
            <summary>
            级联设置菜单 active=true 方法
            </summary>
            <param name="item"></param>
            <param name="active"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.CascadingCancelActive(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.MenuItem})">
            <summary>
            级联设置菜单 Active=false 方法
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MenuLink">
            <summary>
            MenuLink 组件内部封装 NavLink 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuLink.DisableNavigation">
            <summary>
            获得/设置 是否禁止导航 默认为 false 允许导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuLink.Item">
            <summary>
            获得/设置 MenuItem 实例 不可为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuLink.OnClick">
            <summary>
            获得/设置 点击菜单回调委托方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SideMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SideMenu.GetMenuItemLinkClassString(BootstrapBlazor.Components.MenuItem)">
            <summary>
            获得 MenuItemLink 样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SideMenu.GetMenuItemClassString(BootstrapBlazor.Components.MenuItem)">
            <summary>
            获得 MenuItem 样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SideMenu.GetExpandedString(BootstrapBlazor.Components.MenuItem)">
            <summary>
            获得 是否展开字符串
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.DisableNavigation">
            <summary>
            获得/设置 是否禁止导航 默认为 false 允许导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SubMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.Item">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SubMenu.GetClassString(System.String,BootstrapBlazor.Components.MenuItem)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TopMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.DisableNavigation">
            <summary>
            获得/设置 是否禁止导航 默认为 false 允许导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TopMenu.GetClassString(System.String,BootstrapBlazor.Components.MenuItem)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageBase">
            <summary>
            Message 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase.StyleName">
            <summary>
            获得 Toast 组件样式设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase._messages">
            <summary>
            获得 弹出窗集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase.Messages">
            <summary>
            获得 弹出窗集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase.Placement">
            <summary>
            获得/设置 显示位置 默认为 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageBase.MessageService">
            <summary>
            ToastServices 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageBase.Clear">
            <summary>
            清除 ToastBox 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageBase.SetPlacement(BootstrapBlazor.Components.Placement)">
            <summary>
            设置 Toast 容器位置方法
            </summary>
            <param name="placement"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageBase.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageItem">
            <summary>
            MessageItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageItem.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageItem.Content">
            <summary>
            获得/设置 Toast Body 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageItem.IsAutoHide">
            <summary>
            获得/设置 是否自动隐藏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageItem.Delay">
            <summary>
            获得/设置 自动隐藏时间间隔
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageItem.Message">
            <summary>
            获得/设置 Message 实例
            </summary>
            <value></value>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageItem.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageOption">
            <summary>
            Message 组件配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.Color">
            <summary>
            获得/设置 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowDismiss">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowBar">
            <summary>
            获得/设置 是否显示左侧 Bar
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.Host">
            <summary>
            获得/设置 组件主体用于指定弹窗组件 默认为空
            </summary>
            <remarks>设置此属性值可指定弹窗主体组件</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageService">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Modal">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ModalBase">
            <summary>
            Modal 弹窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.ModalElement">
            <summary>
            获得/设置 DOM 元素实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.ClassString">
            <summary>
            获得 样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.Backdrop">
            <summary>
            获得 后台关闭弹窗设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.Dialogs">
            <summary>
            获得 ModalDialog 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.IsBackdrop">
            <summary>
            获得/设置 是否后台关闭弹窗
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.IsFade">
            <summary>
            获得/设置 是否开启淡入淡出动画 默认为 true 开启动画
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalBase.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalBase.Toggle">
            <summary>
            弹窗状态切换方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalBase.AddDialog(BootstrapBlazor.Components.ModalDialogBase)">
            <summary>
            添加对话窗方法
            </summary>
            <param name="dialog"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalBase.ShowDialog(BootstrapBlazor.Components.ModalDialogBase)">
            <summary>
            显示指定对话框方法
            </summary>
            <param name="dialog"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ModalDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.Close">
            <summary>
            Close 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ModalDialogBase">
            <summary>
            ModalBody 组件内嵌与 Modal 组件内
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.ClassName">
            <summary>
            获得 弹窗组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.IsShown">
            <summary>
            获得/设置 是否显示对话框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.Title">
            <summary>
            获得/设置 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.Size">
            <summary>
            获得/设置 弹窗大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.IsCentered">
            <summary>
            获得/设置 是否垂直居中 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.IsScrolling">
            <summary>
            获得/设置 是否弹窗正文超长时滚动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.IsDraggable">
            <summary>
            获得/设置 是否可以拖拽弹窗
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.BodyContext">
            <summary>
            获得/设置 弹窗内容相关数据 多用于传值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.BodyTemplate">
            <summary>
            获得/设置 ModalBody 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.FooterTemplate">
            <summary>
            获得/设置 ModalFooter 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.OnClose">
            <summary>
            获得/设置 关闭弹窗是回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialogBase.Modal">
            <summary>
            获得/设置 弹窗容器实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialogBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialogBase.Show">
            <summary>
            显示弹窗方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NavBase">
            <summary>
            NavMenu 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.Alignment">
            <summary>
            获得/设置 组件对齐方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.IsVertical">
            <summary>
            获得/设置 是否垂直分布
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.IsPills">
            <summary>
            获得/设置 是否为胶囊
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.IsFill">
            <summary>
            获得/设置 是否填充
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.IsJustified">
            <summary>
            获得/设置 是否等宽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NavBase.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NavBase.Render(Microsoft.AspNetCore.Components.Routing.NavLink)">
            <summary>
            获得 NavLink 组件渲染内容
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Pagination">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.GetPageItems">
            <summary>
            获得页码设置集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PaginationBase">
            <summary>
            Pagination 分页组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PageCount">
            <summary>
            获得/设置 页码总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PaginationClass">
            <summary>
            获得 Pagination 样式
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PaginationBarClass">
            <summary>
            获得 PaginationBar 样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PaginationBase.GetPaginationItemClassName(System.Boolean)">
            <summary>
            获得 PaginationItem 样式
            </summary>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.StarIndex">
            <summary>
            获得 起始记录索引
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.EndIndex">
            <summary>
            获得 结尾记录索引
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.StartPageIndex">
            <summary>
            获得/设置 开始页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.EndPageIndex">
            <summary>
            获得/设置 结束页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.TotalCount">
            <summary>
            获得/设置 数据总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PageIndex">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PageItems">
            <summary>
            获得/设置 每页显示数据数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.ShowPaginationInfo">
            <summary>
            获得/设置 是否显示分页数据汇总信息 默认为 true 显示
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.PageItemsSource">
            <summary>
            获得/设置 每页显示数据数量的外部数据源
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.OnPageClick">
            <summary>
            点击页码时回调方法
            </summary>
            <return>第一个参数是当前页码，第二个参数是当前每页设置显示的数据项数量</return>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationBase.OnPageItemsChanged">
            <summary>
            点击设置每页显示数据数量时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PaginationBase.MovePrev(System.Int32)">
            <summary>
            上一页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PaginationBase.MoveNext(System.Int32)">
            <summary>
            下一页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PaginationBase.OnPageItemClick(System.Int32)">
            <summary>
            点击页码时回调方法
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.PaginationBase.OnPageItemsSelectItemChanged(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            每页显示数据项数量选项更改时回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Popover">
            <summary>
            Popover 弹出窗组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Popover.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirm.PopoverService">
            <summary>
            获得/设置 PopoverConfirm 服务实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverConfirmBase">
            <summary>
            PopoverConfirm 弹出窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBase.PopoverService">
            <summary>
            获得/设置 PopoverConfirm 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverConfirmBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverConfirmBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverConfirmBox">
            <summary>
            Popover Confirm 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.ClassName">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.CloseButtonClass">
            <summary>
            获得 关闭按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.ConfirmButtonClass">
            <summary>
            获得 关闭按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.IconClass">
            <summary>
            获得 图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.SourceId">
            <summary>
            获得/设置 关联按钮 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.Content">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.CloseButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.ConfirmButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.Icon">
            <summary>
            获得/设置 确认框图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.OnConfirm">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.OnClose">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmBox.PopoverService">
            <summary>
            获得/设置 PopoverConfirm 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverConfirmBox.OnCloseClick">
            <summary>
            点击关闭按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverConfirmBox.OnConfirmClick">
            <summary>
            点击确认按钮调用此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverConfirmOption">
            <summary>
            确认弹窗相关配置实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.OnConfirm">
            <summary>
            获得/设置 确认回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.OnClose">
            <summary>
            获得/设置 关闭回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.Callback">
            <summary>
            获得/设置 确认弹窗回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.ButtonId">
            <summary>
            获得/设置 弹框按钮触发源组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.Content">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.CloseButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.ConfirmButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverConfirmOption.Icon">
            <summary>
            获得/设置 确认框图标
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverService">
            <summary>
            Popover 服务类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverService.ConfirmBox">
            <summary>
            获得/设置 内部确认弹窗引用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverService.Show(BootstrapBlazor.Components.PopoverConfirmOption)">
            <summary>
            显示确认弹窗方法
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverService.InvokeRun">
            <summary>
            InvokeRun 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverService.Hide">
            <summary>
            关闭确认弹窗方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverService.Register(System.Action)">
            <summary>
            订阅弹窗事件
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ProgressBase">
            <summary>
            Progress 进度条组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.ProgressStyle">
            <summary>
            获得 ProgressStyle 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.Height">
            <summary>
            获得/设置 控件高度默认 20px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.Color">
            <summary>
            获得/设置 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.IsShowValue">
            <summary>
            获得/设置 是否显示进度条值
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.IsStriped">
            <summary>
            获得/设置 是否显示为条纹
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.IsAnimated">
            <summary>
            获得/设置 是否动画
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.Value">
            <summary>
            获得/设置 组件进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.ValueString">
            <summary>
            获得 当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ProgressBase.ValueLabelString">
            <summary>
            获得 当前值百分比标签文字
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QRCode">
            <summary>
            QRCode 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QRCode.OnGenerated">
            <summary>
            获得/设置 二维码生成后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QRCode.PlaceHolder">
            <summary>
            获得/设置 PlaceHolder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QRCode.ClearButtonText">
            <summary>
            获得/设置 清除按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QRCode.GenerateButtonText">
            <summary>
            获得/设置 生成按钮文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QRCode.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QRCode.Generated">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.QRCode.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Radio">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RadioBase`1">
            <summary>
            单选框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioBase`1.Items">
            <summary>
            获得/设置 绑定数据源
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioBase`1.OnToggleClick">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RadioElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioElement.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Rate">
            <summary>
            Rate 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.RateElement">
            <summary>
            获得/设置 Rate DOM 元素实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.GetItemClassString(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.IsDisable">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ValueChanged">
            <summary>
            获得/设置 组件值变化时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.OnValueChanged">
            <summary>
            获得/设置 组件值变化时回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.Clicked(System.Int32)">
            <summary>
            文件上传成功后回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Scroll">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.ScrollElement">
            <summary>
            Scroll 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.IsForce">
            <summary>
            获得/设置 是否强制使用滚动条 默认为 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Scroll.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollBase">
            <summary>
            Scroll 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.AutoHideString">
            <summary>
            获得 是否自动隐藏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.Height">
            <summary>
            获得/设置 组件高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.Width">
            <summary>
            获得/设置 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollBase.IsAutoHide">
            <summary>
            获得/设置 是否自动隐藏
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Search">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Search.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchBase">
            <summary>
            Search 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchBase.SearchButtonColor">
            <summary>
            获得/设置 搜索按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchBase.SearchButtonIcon">
            <summary>
            获得/设置 搜索按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchBase.SearchButtonText">
            <summary>
            获得/设置 搜索按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchBase.OnSearch">
            <summary>
            获得/设置 点击搜索按钮时回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchBase.OnClick">
            <summary>
            点击搜索按钮时触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchBase.OnKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ISelect">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISelect.Add(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MultiSelect`1">
            <summary>
            MultiSelect 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.PlaceHolder">
            <summary>
            获得/设置 组件 PlaceHolder 文字 默认为 点击进行多选 ...
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowSelectAllButton">
            <summary>
            获得/设置 是否显示全选功能按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.OnSearchTextChanged">
            <summary>
            获得/设置 搜索文本发生变化时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.OnSelectedItemsChanged">
            <summary>
            获得/设置 选中项集合发生改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.SelectAllText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ReverseSelectText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ClearText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnParametersSetAsync">
            <summary>
            OnParametersSetAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.Close">
            <summary>
            客户端关闭下拉框方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnValidate(System.Boolean)">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Select`1">
            <summary>
            Select 组件实现类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectBase`1">
            <summary>
            Select 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.AppendClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.ActiveItem(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            设置当前项是否 Active 方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SelectedItem">
            <summary>
            当前选择项实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.InputId">
            <summary>
            获得/设置 Select 内部 Input 组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.CurrentTextAsString">
            <summary>
            获得 当前选项显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.Initialized">
            <summary>
            获得/设置 是否初始化完成 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchText">
            <summary>
            获得/设置 搜索文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ItemTemplate">
            <summary>
            获得/设置 选项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.OnSearchTextChanged">
            <summary>
            获得/设置 搜索文本发生变化时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.OnSelectedItemChanged">
            <summary>
            SelectedItemChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.Options">
            <summary>
            获得/设置 选项模板支持静态数据
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.RetrieveId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnItemClick(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnValidate(System.Boolean)">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.GetItems">
            <summary>
            获得 数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.GetShownItems">
            <summary>
            获取显示的候选项集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.SetItems(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.SelectedItem})">
            <summary>
            更改组件数据源方法
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.Add(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            添加静态下拉项方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectOption">
            <summary>
            SelectOption 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Active">
            <summary>
            获得/设置 是否选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Container">
            <summary>
            父组件通过级联参数获得
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectOption.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonAvatar">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonAvatar.Circle">
            <summary>
            获得/设置 是否为圆形 默认为 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonBase">
            <summary>
            骨架屏组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.Round">
            <summary>
            获得/设置 是否圆角 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.Active">
            <summary>
            获得/设置 是否显示动画 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.ClassString">
            <summary>
            获得 样式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SliderBase">
            <summary>
            Slider 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.Interop">
            <summary>
            获得/设置 JSInterop 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.SliderClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.BarStyle">
            <summary>
            获得 Bar 位置样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.ButtonStyle">
            <summary>
            获得 按钮位置样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.Slider">
            <summary>
            获得/设置 当前组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.Value">
            <summary>
            获得/设置 组件当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.ValueChanged">
            <summary>
            ValueChanged 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.Disabled">
            <summary>
            获得 按钮 disabled 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SliderBase.IsDisabled">
            <summary>
            获得/设置 是否禁用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SliderBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SliderBase.SetValue(System.Int32)">
            <summary>
            SetValue 方法
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SliderBase.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.SpinnerBase">
            <summary>
            Spinner 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.ClassName">
            <summary>
            获取Spinner样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.Class">
            <summary>
            获得/设置 Spinner样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.Color">
            <summary>
            获得/设置 Spinner颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.Size">
            <summary>
            获得 / 设置 Spinner大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.SpinnerType">
            <summary>
            获得/设置 Spinner类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpinnerBase.spinner">
            <summary>
            获取 Spinner类型
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SpinnerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SpinnerType.Border">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SpinnerType.Grow">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SplitBase">
            <summary>
            Split 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.SplitElement">
            <summary>
            获得 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.WrapperClassString">
            <summary>
            获得 组件 Wrapper 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.StyleString">
            <summary>
            获得 第一个窗格 Style
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.IsVertical">
            <summary>
            获得/设置 是否垂直分割
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.Basis">
            <summary>
            获得/设置 第一个窗格初始化位置占比 默认为 50%
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.FirstPaneTemplate">
            <summary>
            获得/设置 第一个窗格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitBase.SecondPaneTemplate">
            <summary>
            获得/设置 第二个窗格模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SplitBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Step">
            <summary>
            Step 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Title">
            <summary>
            获得/设置 步骤显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Icon">
            <summary>
            获得/设置 步骤显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Status">
            <summary>
            获得/设置 步骤状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Description">
            <summary>
            获得/设置 描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Space">
            <summary>
            获得/设置 step 的间距不填写将自适应间距支持百分比
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.IsIcon">
            <summary>
            获得/设置 是否为图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.IsLast">
            <summary>
            获得/设置 是否为最后一个 Step
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.IsCenter">
            <summary>
            获得/设置 是否居中对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.StepIndex">
            <summary>
            获得/设置 Step 顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Steps">
            <summary>
            获得/设置 父级组件 Steps 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.OnStatusChanged">
            <summary>
            获得/设置 步骤组件状态改变时回调委托
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepItem">
            <summary>
            Step 组件项类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Title">
            <summary>
            获得/设置 步骤显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Icon">
            <summary>
            获得/设置 步骤显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Status">
            <summary>
            获得/设置 步骤状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Description">
            <summary>
            获得/设置 描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Space">
            <summary>
            获得/设置 每个 step 的间距不填写将自适应间距支持百分比
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Line">
            <summary>
            获得/设置 进度条是否充满 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepsBase">
            <summary>
            Step 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.Items">
            <summary>
            获得/设置 步骤集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.IsVertical">
            <summary>
            获得/设置 是否垂直渲染 默认 false 水平渲染
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.IsCenter">
            <summary>
            获得/设置 是否居中对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.Status">
            <summary>
            获得/设置 设置当前激活步骤
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.ChildContent">
            <summary>
            获得/设置 组件内容实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepsBase.OnStatusChanged">
            <summary>
            获得/设置 步骤组件状态改变时回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepsBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepsBase.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepsBase.RenderStep(BootstrapBlazor.Components.StepItem)">
            <summary>
            渲染 Step 组件方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalOption">
            <summary>
            SweetAlert Option 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Dialog">
            <summary>
            获得/设置 相关弹窗实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Body">
            <summary>
            获得/设置 相关弹窗实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ReturnTask">
            <summary>
            获得/设置 模态弹窗返回值任务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Category">
            <summary>
            获得/设置 提示类型 默认为 Sucess
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Title">
            <summary>
            获得/设置 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.BodyContext">
            <summary>
            获得/设置 相关连数据，多用于传值使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.BodyTemplate">
            <summary>
            获得/设置 ModalBody 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.FooterTemplate">
            <summary>
            获得/设置 Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.IsConfirm">
            <summary>
            获得/设置 是否为确认弹窗模式 默认为 false
            </summary>
            <remarks>此属性给模态弹窗时使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.KeepChildrenState">
            <summary>
            获得/设置 是否保持弹窗内组件状态 默认为 false 不保持
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ButtonTemplate">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.ToAttributes">
            <summary>
            将参数转换为组件属性方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.Close(System.Boolean)">
            <summary>
            关闭弹窗方法
            </summary>
            <param name="returnValue">模态弹窗返回值 默认为 true</param>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalService">
            <summary>
            SweetAlert 弹窗服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalService.ShowModal(BootstrapBlazor.Components.SwalOption)">
            <summary>
            异步回调方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SweetAlert">
            <summary>
            SweetAlert 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlert.ModalContainer">
            <summary>
            获得/设置 Modal 容器组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlert.ModalDialog">
            <summary>
            获得/设置 弹出对话框实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlert.SwalService">
            <summary>
            DialogServices 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.SweetAlertBody">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.CloseButtonText">
            <summary>
            获得/设置 关闭按钮文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮文字 默认为 确认
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.CancelButtonText">
            <summary>
            获得/设置 取消按钮文字 默认为 取消
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Category">
            <summary>
            获得/设置 弹窗类别默认为 Success
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Content">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.IsConfirm">
            <summary>
            获得/设置 是否为确认弹窗模式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.OnClose">
            <summary>
            获得/设置 关闭按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.OnConfirm">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.BodyTemplate">
            <summary>
            获得/设置 显示内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.FooterTemplate">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ButtonTemplate">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlertBody.Parse(BootstrapBlazor.Components.SwalOption)">
            <summary>
            将配置信息转化为参数集合
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlertBody.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Switch">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Switch.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SwitchBase">
            <summary>
            Switch 开关组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.CoreClassName">
            <summary>
            获得 开关样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwitchBase.GetInnerText">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.Text">
            <summary>
            获得 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.Disabled">
            <summary>
            获得 开关 disabled 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.OnColor">
            <summary>
            获得/设置 开颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.OffColor">
            <summary>
            获得/设置 关颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.Width">
            <summary>
            获得/设置 组件宽度 默认 40
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.Height">
            <summary>
            获得/设置 控件高度默认 20px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.OnInnerText">
            <summary>
            获得/设置 组件 On 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.OffInnerText">
            <summary>
            获得/设置 组件 Off 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchBase.ShowInnerText">
            <summary>
            获得/设置 是否显示内置文字
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabBase">
            <summary>
            Tab 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.FirstRender">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.GetContentClassString(BootstrapBlazor.Components.TabItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.GetClassString(System.Boolean)">
            <summary>
            
            </summary>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.GetIconClassString(System.String)">
            <summary>
            
            </summary>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.TabElement">
            <summary>
            获得/设置 Tab 组件 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.ClassString">
            <summary>
            获得 Tab 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.StyleString">
            <summary>
            获得 Tab 组件 Style
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.Items">
            <summary>
            获得/设置 TabItem 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.IsCard">
            <summary>
            获得/设置 是否为卡片样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.IsBorderCard">
            <summary>
            获得/设置 是否为带边框卡片样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.Height">
            <summary>
            获得/设置 组件高度 默认值为 0 高度自动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.Placement">
            <summary>
            获得/设置 组件标签显示位置 默认显示在 Top 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.ChildContent">
            <summary>
            获得/设置 TabItems 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabBase.OnClickTab">
            <summary>
            获得/设置 点击 TabItem 时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.OnClickTabItem(BootstrapBlazor.Components.TabItem)">
            <summary>
            点击 TabItem 时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.ClickPrevTab">
            <summary>
            点击上一个标签页时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.ClickNextTab">
            <summary>
            点击下一个标签页时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.AddItem(BootstrapBlazor.Components.TabItem)">
            <summary>
            添加 TabItem 方法 由 TabItem 方法加载时调用
            </summary>
            <param name="item">TabItemBase 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.Add(BootstrapBlazor.Components.TabItem)">
            <summary>
            添加 TabItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.Remove(BootstrapBlazor.Components.TabItem)">
            <summary>
            移除 TabItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabBase.ActiveTab(BootstrapBlazor.Components.TabItem)">
            <summary>
            设置指定 TabItem 为激活状态
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItem">
            <summary>
            TabItem 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Text">
            <summary>
            获得/设置 文本文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.IsActive">
            <summary>
            获得/设置 当前状态是否激活
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Icon">
            <summary>
            获得/设置 图标字符串 如 "fa fa"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Key">
            <summary>
            获得/设置 相关键值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.TabSet">
            <summary>
            获得/设置 所属 Tab 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.SetActive(System.Boolean)">
            <summary>
            设置是否被选中方法
            </summary>
            <param name="active"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoGenerateColumnAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Order">
            <summary>
            获得/设置 显示顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Ignore">
            <summary>
            获得/设置 是否忽略 默认为 false 不忽略
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Editable">
            <summary>
            获得/设置 当前列是否可编辑 默认为 true 当设置为 false 时自动生成编辑 UI 不生成此列
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Readonly">
            <summary>
            获得/设置 当前列编辑时是否只读 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Sortable">
            <summary>
            获得/设置 是否允许排序 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.DefaultSort">
            <summary>
            获得/设置 是否为默认排序列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.DefaultSortOrder">
            <summary>
            获得/设置 是否为默认排序规则 默认为 SortOrder.Unset
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Filterable">
            <summary>
            获得/设置 是否允许过滤数据 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Searchable">
            <summary>
            获得/设置 是否参与搜索 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Width">
            <summary>
            获得/设置 列宽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Fixed">
            <summary>
            获得/设置 是否固定本列 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Visible">
            <summary>
            获得/设置 列是否显示 默认为 true 可见的
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.AllowTextWrap">
            <summary>
            获得/设置 本列是否允许换行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.TextEllipsis">
            <summary>
            获得/设置 本列文本超出省略 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.CssClass">
            <summary>
            获得/设置 列 td 自定义样式 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShownWithBreakPoint">
            <summary>
            显示节点阈值 默认值 BreakPoint.None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Align">
            <summary>
            获得/设置 文字对齐方式 默认为 Alignment.None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShowTips">
            <summary>
            字段鼠标悬停提示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Formatter">
            <summary>
            获得/设置 列格式化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.EditTemplate">
            <summary>
            获得/设置 编辑模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Template">
            <summary>
            获得/设置 显示模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.SearchTemplate">
            <summary>
            获得/设置 搜索模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FilterTemplate">
            <summary>
            获得/设置 过滤模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Filter">
            <summary>
            获得/设置 列过滤器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FieldType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GetDisplayName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GetFieldName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultExcelExport">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultExcelExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},Microsoft.JSInterop.IJSRuntime)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableDialog`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableDialog`1.Model">
            <summary>
            获得/设置 EditModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableDialog`1.BodyTemplate">
            <summary>
            获得/设置 BodyTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableDialog`1.Columns">
            <summary>
            获得 表头集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableDialog`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableEditorDialog`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditorDialog`1.OnSaveAsync">
            <summary>
            获得/设置 保存回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditorDialog`1.CloseButtonText">
            <summary>
            重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditorDialog`1.SaveButtonText">
            <summary>
            查询按钮文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableEditorDialog`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableSearchDialog`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSearchDialog`1.OnResetSearchClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSearchDialog`1.OnSearchClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSearchDialog`1.ResetButtonText">
            <summary>
            重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSearchDialog`1.QueryButtonText">
            <summary>
            查询按钮文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableSearchDialog`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditMode">
            <summary>
            Table 组件编辑模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.Popup">
            <summary>
            弹窗式编辑模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.EditForm">
            <summary>
            行内编辑模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BoolFilter">
            <summary>
            布尔类型过滤条件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.GetFilterConditions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeFilter">
            <summary>
            时间类型过滤条件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.GetFilterConditions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EnumFilter">
            <summary>
            枚举类型过滤组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EnumFilter.EnumType">
            <summary>
            内部使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EnumFilter.Type">
            <summary>
            获得/设置 相关枚举类型
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.GetFilterConditions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterBase">
            <summary>
            类型过滤器基类
            /// </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.Logic">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.FieldKey">
            <summary>
            获得/设置 相关 Field 字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.Count">
            <summary>
            获得/设置 条件数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.TableFilter">
            <summary>
            获得/设置 所属 TableFilter 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.GetFilterConditions">
            <summary>
            获得过滤窗口的所有条件方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterKeyValueAction">
            <summary>
            Filter 过滤条件项目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FieldKey">
            <summary>
            获得/设置 Filter 项字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FieldValue">
            <summary>
            获得/设置 Filter 项字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FilterLogic">
            <summary>
            获得/设置 Filter 项与其他 Filter 逻辑关系
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FilterAction">
            <summary>
            获得/设置 Filter 条件行为
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IFilter">
            <summary>
            过滤器接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilter.Show">
            <summary>
            显示过滤窗口方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IFilter.FilterAction">
            <summary>
            获得/设置 本过滤器相关 IFilterAction 实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IFilterAction">
            <summary>
            ITableFitler 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilterAction.GetFilterConditions">
            <summary>
            获得 IFilter 实例中的过滤条件集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilterAction.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NumberFilter">
            <summary>
            数字类型过滤条件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter.GetFilterConditions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.StringFilter">
            <summary>
            字符串类型过滤条件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StringFilter.Logic">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.GetFilterConditions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableFilter">
            <summary>
            TableFilter 基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.ClassString">
            <summary>
            获得 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.FilterElement">
            <summary>
            获得/设置 DOM 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.Title">
            <summary>
            获得/设置 Header 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.FieldKey">
            <summary>
            获得/设置 相关 Field 字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.IsShow">
            <summary>
            获得/设置 是否显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.Count">
            <summary>
            获得/设置 条件数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.ShowMoreButton">
            <summary>
            获得/设置 是否显示增加减少条件按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.FilterAction">
            <summary>
            获得/设置 过滤条件 IFilterAction 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.Column">
            <summary>
            获得 相关联 ITableColumn 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.ClearButtonText">
            <summary>
            重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.FilterButtonText">
            <summary>
            过滤按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFilter.Table">
            <summary>
            获得/设置 Table Header 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.Show">
            <summary>
            显示弹窗方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.Close">
            <summary>
            客户端 JS 调用关闭 TableFilter 弹窗
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.ConfirmByKey">
            <summary>
            客户端 JS 回车按键事件调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.EscByKey">
            <summary>
            客户端 JS ESC 按键事件调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnClickReset">
            <summary>
            点击重置按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnClickConfirm">
            <summary>
            点击确认时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnClickPlus">
            <summary>
            点击增加按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.OnClickMinus">
            <summary>
            点击减少按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFilter.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalTableColumn.#ctor(System.String,System.Type,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldText">显示文字</param>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalTableColumn.CopyValue(BootstrapBlazor.Components.ITableColumn,BootstrapBlazor.Components.AutoGenerateColumnAttribute)">
            <summary>
            属性赋值方法
            </summary>
            <param name="source"></param>
            <param name="dest"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ITable">
            <summary>
            ITable 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITable.Columns">
            <summary>
            获得 ITableColumn 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITable.Filters">
            <summary>
            获得 过滤条件集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITable.OnFilterAsync">
            <summary>
            获得 过滤异步回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableColumn">
            <summary>
            ITableHeader 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Sortable">
            <summary>
            获得/设置 是否允许排序 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.DefaultSort">
            <summary>
            获得/设置 是否为默认排序列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.DefaultSortOrder">
            <summary>
            获得/设置 是否为默认排序规则 默认为 SortOrder.Unset
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Filterable">
            <summary>
            获得/设置 是否允许过滤数据 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Searchable">
            <summary>
            获得/设置 是否参与搜索 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Width">
            <summary>
            获得/设置 列宽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Fixed">
            <summary>
            获得/设置 是否固定本列 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Visible">
            <summary>
            获得/设置 列是否显示 默认为 true 可见的
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.AllowTextWrap">
            <summary>
            获得/设置 本列是否允许换行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.TextEllipsis">
            <summary>
            获得/设置 本列文本超出省略 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.CssClass">
            <summary>
            获得/设置 列 td 自定义样式 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShownWithBreakPoint">
            <summary>
            显示节点阈值 默认值 BreakPoint.None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Template">
            <summary>
            获得/设置 显示模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.SearchTemplate">
            <summary>
            获得/设置 搜索模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.FilterTemplate">
            <summary>
            获得/设置 过滤模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Filter">
            <summary>
            获得/设置 列过滤器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Formatter">
            <summary>
            获得/设置 列格式化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Align">
            <summary>
            获得/设置 文字对齐方式 默认为 Alignment.None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShowTips">
            <summary>
            字段鼠标悬停提示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Order">
            <summary>
            获得/设置 顺序号
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableExcelExport">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExcelExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},Microsoft.JSInterop.IJSRuntime)">
            <summary>
            导出 Excel 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IToolbarButton`1">
            <summary>
            IToolbarButton 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IToolbarButton`1.OnClickCallback">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryData`1">
            <summary>
            表格查询数据类
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.Items">
            <summary>
            获得/设置 要显示页码的数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.TotalCount">
            <summary>
            获得/设置 数据集合总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsFiltered">
            <summary>
            获得/设置 数据是否被过滤 默认为 false 未被过滤
            </summary>
            <remarks>组件内部通过此属性判断，如果外部未进行数据过滤，内部将进行数据过滤操作</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsSorted">
            <summary>
            获得/设置 数据是否被排序 默认为 false 未被排序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsSearch">
            <summary>
            获得/设置 数据是否为搜索模式 默认为 false
            </summary>
            <remarks>设置本属性为 true 时，Table 组件的高级搜索按钮改变颜色</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryPageOptions">
            <summary>
            查询条件实体类
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.QueryPageOptions.DefaultPageItems">
            <summary>
            每页数据数量 默认 20 行
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SearchText">
            <summary>
            获得/设置 查询关键字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SortName">
            <summary>
            获得/设置 排序字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SortOrder">
            <summary>
            获得/设置 排序方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.Filters">
            <summary>
            获得/设置 过滤条件集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SearchModel">
            <summary>
            获得/设置 搜索条件绑定模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.PageIndex">
            <summary>
            获得/设置 当前页码 首页为 第一页
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.PageItems">
            <summary>
            获得/设置 每页条目数量
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Table`1">
            <summary>
            Table 组件基类
            </summary>
            <summary>
            
            </summary>
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxDisplayTextString">
            <summary>
            获得 选择列显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxColumnClass">
            <summary>
            获得 Checkbox 样式表集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.HeaderCheckState">
            <summary>
            获得 表头行是否选中状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.RowCheckState(`0)">
            <summary>
            获得 当前行是否被选中
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.HeaderCheckbox">
            <summary>
            获得/设置 表头上的复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsMultipleSelect">
            <summary>
            获得/设置 是否为多选模式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowCheckboxText">
            <summary>
            获得/设置 是否显示选择框文字
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxDisplayText">
            <summary>
            获得/设置 显示选择框文字 默认为 选择
            </summary>
            <value></value>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnHeaderCheck(BootstrapBlazor.Components.CheckboxState,`0)">
            <summary>
            点击 Header 选择复选框时触发此方法
            </summary>
            <param name="state"></param>
            <param name="val"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnCheck">
            <summary>
            点击选择复选框时触发此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableClassName">
            <summary>
            获得 Table 组件样式表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.WrapperClassName">
            <summary>
            获得 wrapper 样式表集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetRowClassString(`0,System.String)">
            <summary>
            获得 Body 内行样式
            </summary>
            <param name="item"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailBarClassString(`0)">
            <summary>
            明细行首小图标单元格样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailRowClassString(`0)">
            <summary>
            获得明细行样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailCaretClassString(`0)">
            <summary>
            获得明细行小图标样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExpandRows">
            <summary>
            明细行集合用于数据懒加载
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ExpandDetailRow(`0)">
            <summary>
            明细行功能中切换行状态时调用此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DetailRows">
            <summary>
            明细行集合用于数据懒加载
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FilterColumns">
            <summary>
            获得/设置 可过滤表格列集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.StarRowIndex">
            <summary>
            获得 起始行号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsRendered">
            <summary>
            获得/设置 组件是否渲染完毕 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Columns">
            <summary>
            获得 表头集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DetailRowTemplate">
            <summary>
            获得/设置 明细行模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableColumns">
            <summary>
            获得/设置 TableHeader 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableFooter">
            <summary>
            获得/设置 TableFooter 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Items">
            <summary>
            获得/设置 数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableSize">
            <summary>
            获得/设置 表格组件大小 默认为 Normal 正常模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowFooter">
            <summary>
            获得/设置 是否显示表脚 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AllowResizing">
            <summary>
            获得/设置 是否允许列宽度调整 默认 false 固定表头时此属性生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsStriped">
            <summary>
            获得/设置 是否斑马线样式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsBordered">
            <summary>
            获得/设置 是否带边框样式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoRefresh">
            <summary>
            获得/设置 是否自动刷新表格 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoRefreshInterval">
            <summary>
            获得/设置 自动刷新时间间隔 默认 2000 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnClickRowCallback">
            <summary>
            获得/设置 单击行回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDoubleClickRowCallback">
            <summary>
            获得/设置 双击行回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDetailRow">
            <summary>
            获得/设置 是否显示每行的明细行展开图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnInitializedAsync">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FirstRender">
            <summary>
            获得/设置 是否我第一次 Render
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.RetrieveWidth">
            <summary>
            获得 Table 组件客户端宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.CheckShownWithBreakpoint(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            检查当前列是否显示方法
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetValue(BootstrapBlazor.Components.ITableColumn,`0)">
            <summary>
            获得 指定单元格数据方法
            </summary>
            <param name="col"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ButtonColumnClass">
            <summary>
            获得 Checkbox 样式表集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModalTitleString">
            <summary>
            获得/设置 编辑弹窗 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SelectedItems">
            <summary>
            获得/设置 被选中数据集合
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ActiveRenderModel">
            <summary>
            获得 渲染模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScreenSize">
            <summary>
            获得/设置 客户端屏幕宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.UseComponentWidth">
            <summary>
            获得/设置 组件渲染模式是否使用组件宽度来判断 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditMode">
            <summary>
            获得/设置 组件编辑模式 默认为弹窗编辑行数据 PopupEditForm
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RenderModel">
            <summary>
            获得/设置 组件布局方式 默认为 Auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RenderModelResponsiveWidth">
            <summary>
            获得/设置 组件布局自适应切换阈值 默认为 768
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScrollingDialogContent">
            <summary>
            获得/设置 编辑弹框是否 Body 出现滚动条 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SelectedRows">
            <summary>
            获得/设置 被选中的数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SelectedRowsChanged">
            <summary>
            获得/设置 被选中的数据集合回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SetRowClassFormatter">
            <summary>
            获得/设置 行样式格式回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModalTitle">
            <summary>
            获得/设置 编辑数据弹窗 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddModalTitle">
            <summary>
            获得/设置 新建数据弹窗 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModel">
            <summary>
            获得/设置 EditModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditTemplate">
            <summary>
            获得/设置 EditTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RowButtonTemplate">
            <summary>
            获得/设置 RowButtonTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonTemplateHeaderText">
            <summary>
            获得/设置 行内功能按钮列头文本 默认为 操作
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ClickToSelect">
            <summary>
            获得/设置 点击行即选中本行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DoubleClickToEdit">
            <summary>
            获得/设置 单选模式下双击即编辑本行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoGenerateColumns">
            <summary>
            获得/设置 是否自动生成列信息 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClickRow(`0)">
            <summary>
            单选模式下选择行时调用此方法
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.CheckActive(`0)">
            <summary>
            检查当前行是否被选中方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.QueryAsync">
            <summary>
            查询按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.QueryData">
            <summary>
            调用 OnQuery 回调方法获得数据源
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClickEditButtonCallback(`0)">
            <summary>
            行尾列编辑按钮点击回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DoubleClickRow(`0)">
            <summary>
            双击行回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClickBeforeDelete(`0)">
            <summary>
            行尾列按钮点击回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFilterClassString(System.String)">
            <summary>
            获得 过滤小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnFilterAsync">
            <summary>
            获得/设置 表头过滤时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Filters">
            <summary>
            获得 过滤集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnFilterClick(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            点击 过滤小图标方法
            </summary>
            <param name="col"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedHeaderStyleName">
            <summary>
            获得 wrapper 样式表集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableElement">
            <summary>
            获得/设置 Table 组件引用
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Height">
            <summary>
            获得/设置 Table 高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.MultiHeaderTemplate">
            <summary>
            获得/设置 多表头模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonText">
            <summary>
            新建按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonText">
            <summary>
            编辑按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonText">
            <summary>
            删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CancelDeleteButtonText">
            <summary>
            取消删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonText">
            <summary>
            保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ConfirmDeleteButtonText">
            <summary>
            确认删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ConfirmDeleteContentText">
            <summary>
            确认删除弹窗文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RefreshButtonText">
            <summary>
            刷新按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonTitleText">
            <summary>
            列显示隐藏按钮提示信息文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonText">
            <summary>
            列按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportButtonText">
            <summary>
            导出按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchPlaceholderText">
            <summary>
            搜索栏 Placeholder 文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchButtonText">
            <summary>
            搜索按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchModalTitle">
            <summary>
            搜索按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchTooltip">
            <summary>
            获得/设置 搜索框提示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ResetButtonText">
            <summary>
            重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvanceButtonText">
            <summary>
            高级搜索按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonToastTitle">
            <summary>
            新增按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonToastContent">
            <summary>
            新增按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastTitle">
            <summary>
            编辑按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastNotSelectContent">
            <summary>
            编辑按钮 Toast 未选择时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastMoreSelectContent">
            <summary>
            编辑按钮 Toast 多项选择时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastNoSaveMethodContent">
            <summary>
            编辑按钮 Toast 未提供 Save 方法时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastTitle">
            <summary>
            保存按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastContent">
            <summary>
            保存按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastResultContent">
            <summary>
            保存按钮结果 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SuccessText">
            <summary>
            保存成功文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FailText">
            <summary>
            保存失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastTitle">
            <summary>
            删除按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastContent">
            <summary>
            删除按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastResultContent">
            <summary>
            删除按钮结果 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsPagination">
            <summary>
            获得/设置 是否分页 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowLineNo">
            <summary>
            获得/设置 是否显示行号列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.LineNoText">
            <summary>
            获得/设置 行号列标题文字 默认为 行号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageItemsSource">
            <summary>
            获得/设置 每页显示数据数量的外部数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnQueryAsync">
            <summary>
            异步查询回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TotalCount">
            <summary>
            获得/设置 数据总条目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageIndex">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageItems">
            <summary>
            获得/设置 每页数据数量
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnPageClick(System.Int32,System.Int32)">
            <summary>
            点击页码调用此方法
            </summary>
            <param name="pageIndex"></param>
            <param name="pageItems"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnPageItemsChanged(System.Int32)">
            <summary>
            每页记录条数变化是调用此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvanceSearchClass">
            <summary>
            获得 高级搜索样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsSearch">
            <summary>
            获得/设置 是否搜索
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsFiltered">
            <summary>
            获得/设置 是否数据过滤
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsSorted">
            <summary>
            获得/设置 是否数据排序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchTemplate">
            <summary>
            获得/设置 SearchTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchModel">
            <summary>
            获得/设置 SearchModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框 默认为 false 不显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowAdvancedSearch">
            <summary>
            获得/设置 是否显示高级搜索按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchText">
            <summary>
            获得/设置 搜索关键字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnResetSearchAsync">
            <summary>
            重置搜索按钮异步回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResetSearchClick">
            <summary>
            重置查询方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.SearchClick">
            <summary>
            查询方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowSearchDialog">
            <summary>
            高级查询按钮点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClearSearchClick">
            <summary>
            重置搜索按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            搜索文本框按键回调方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortName">
            <summary>
            获得/设置 排序字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortOrder">
            <summary>
            获得/设置 排序方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIconAsc">
            <summary>
            获得/设置 升序图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIconDesc">
            <summary>
            获得/设置 降序图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIcon">
            <summary>
            获得/设置 默认图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnSortAsync">
            <summary>
            获得/设置 表头排序时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnClickHeader(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            点击列进行排序方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFixedCellClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得指定列头固定列样式
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetCellStyleString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得列单元格 Style 用于设置文本超长溢出
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFixedCellStyleString(BootstrapBlazor.Components.ITableColumn,System.Int32)">
            <summary>
            获得指定列头固定列样式
            </summary>
            <param name="col"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderWrapperClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderTextClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得 Header 中表头文字样式
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetCellClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得 Cell 文字样式
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetIconClassString(System.String)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowToolbar">
            <summary>
            获得/设置 是否显示工具栏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSkeleton">
            <summary>
            获得/设置 是否显示加载骨架屏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDefaultButtons">
            <summary>
            获得/设置 是否显示按钮列 默认为 true
            </summary>
            <remarks>本属性设置为 true 新建编辑删除按钮设置为 false 可单独控制每个按钮是否显示</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowAddButton">
            <summary>
            获得/设置 是否显示新建按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowEditButton">
            <summary>
            获得/设置 是否显示编辑按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDeleteButton">
            <summary>
            获得/设置 是否显示删除按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExportButton">
            <summary>
            获得/设置 是否显示导出按钮 默认为 false 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendButtons">
            <summary>
            获得/设置 是否显示扩展按钮 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExtendButtonColumnWidth">
            <summary>
            获得/设置 行内操作列宽度 默认为 130
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowRefresh">
            <summary>
            获得/设置 是否显示刷新按钮 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowColumnList">
            <summary>
            获得/设置 是否显示列选择下拉框 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableToolbarTemplate">
            <summary>
            获得/设置 表格 Toolbar 按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAddAsync">
            <summary>
            获得/设置 新建按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnSaveAsync">
            <summary>
            获得/设置 保存按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDeleteAsync">
            <summary>
            获得/设置 删除按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnExportAsync">
            <summary>
            获得/设置 导出按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogSaveButtonText">
            <summary>
            获得/设置 保存弹窗中的保存按钮显示文本 默认为资源文件中的 保存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Toast">
            <summary>
            ToastService 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DialogService">
            <summary>
            DialogService 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnVisibles">
            <summary>
            获得/设置 各列是否显示状态集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.AddAsync">
            <summary>
            新建按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.EditAsync">
            <summary>
            编辑按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.CancelSave">
            <summary>
            取消保存方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.Save(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            保存数据
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowEditorDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ConfirmDelete">
            <summary>
            确认删除按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DeleteAsync">
            <summary>
            删除数据方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ConfirmExport">
            <summary>
            确认导出按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ExportAsync">
            <summary>
            导出数据方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetSelectedRows">
            <summary>
            获取当前 Table 选中的所有行数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellButton`1">
            <summary>
            单元格内按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton`1.Item">
            <summary>
            获得/设置 当前行绑定数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton`1.OnClickCallback">
            <summary>
            获得/设置 按钮点击后的回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton`1.OnClickWithoutRenderCallback">
            <summary>
            获得/设置 OnClick 事件不刷新父组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellButton`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumn`1">
            <summary>
            表头组件
            </summary>
            <typeparam name="TType">绑定字段值类型</typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Filter">
            <summary>
            获得/设置 相关过滤器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.FieldType">
            <summary>
            获得/设置 绑定列类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Field">
            <summary>
            获得/设置 数据绑定字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.FieldExpression">
            <summary>
            获得/设置 ValueExpression 表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Sortable">
            <summary>
            获得/设置 是否排序 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.DefaultSort">
            <summary>
            获得/设置 是否为默认排序列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.AllowTextWrap">
            <summary>
            获得/设置 本列是否允许换行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.TextEllipsis">
            <summary>
            获得/设置 本列文本超出省略 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.DefaultSortOrder">
            <summary>
            获得/设置 是否为默认排序规则 默认为 SortOrder.Unset
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Filterable">
            <summary>
            获得/设置 是否可过滤数据 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Searchable">
            <summary>
            获得/设置 是否参与搜索自动生成 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Editable">
            <summary>
            获得/设置 当前列是否可编辑 默认为 true 当设置为 false 时自动生成编辑 UI 不生成此列
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Readonly">
            <summary>
            获得/设置 当前列编辑时是否为只读模式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Text">
            <summary>
            获得/设置 表头显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Width">
            <summary>
            获得/设置 列宽 默认为 auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Fixed">
            <summary>
            获得/设置 是否固定本列 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Visible">
            <summary>
            获得/设置 是否显示本列 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.ShowTips">
            <summary>
            获得/设置 字段鼠标悬停提示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.CssClass">
            <summary>
            获得/设置 列 td 自定义样式 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Align">
            <summary>
            获得/设置 文字对齐方式 默认为 Alignment.None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Formatter">
            <summary>
            获得/设置 列格式化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Template">
            <summary>
            获得/设置 显示模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.EditTemplate">
            <summary>
            获得/设置 编辑模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.SearchTemplate">
            <summary>
            获得/设置 搜索模板
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.FilterTemplate">
            <summary>
            获得/设置 过滤模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.ShownWithBreakPoint">
            <summary>
            获得/设置 显示节点阈值 默认值 BreakPoint.None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Order">
            <summary>
            获得/设置 显示顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.Table">
            <summary>
            获得/设置 Table 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`1.BootstrapBlazor#Components#ITableColumn#Template">
            <summary>
            内部使用负责把 object 类型的绑定数据值转化为泛型数据传递给前端
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`1.OnInitialized">
            <summary>
            组件初始化方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`1.GetDisplayName">
            <summary>
            获取绑定字段显示名称方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`1.GetFieldName">
            <summary>
            获取绑定字段信息方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumnContext`2">
            <summary>
            TableColumn 上下文类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnContext`2.#ctor(`0,`1)">
            <summary>
            构造方法
            </summary>
            <param name="model"></param>
            <param name="value"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnContext`2.Row">
            <summary>
            获得/设置 行数据实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnContext`2.Value">
            <summary>
            获得/设置 当前绑定字段数据实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableSize">
            <summary>
            Table 大小枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableSize.Normal">
            <summary>
            正常模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableSize.Compact">
            <summary>
            紧凑模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbar`1">
            <summary>
            Table Toolbar 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.Buttons">
            <summary>
            获得 Toolbar 按钮集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.ChildContent">
            <summary>
            Specifies the content to be rendered inside this
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.OnGetSelectedRows">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbar`1.AddButton(BootstrapBlazor.Components.IToolbarButton{`0})">
            <summary>
            添加按钮到工具栏方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbarButton`1">
            <summary>
            表格 Toolbar 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.IsDisabled">
            <summary>
            获得/设置 是否禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.OnClickCallback">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.OnClick">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.Toolbar">
            <summary>
            获得/设置 Table Toolbar 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarButton`1.OnInitialized">
            <summary>
            组件初始化方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbarPopconfirmButton`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopconfirmButton`1.OnClickCallback">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopconfirmButton`1.Toolbar">
            <summary>
            获得/设置 Table Toolbar 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarPopconfirmButton`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Tag">
            <summary>
            Tag 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tag.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TextareaBase">
            <summary>
            Textarea 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TextareaBase.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimelineBase">
            <summary>
            时间线组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineBase.ClassString">
            <summary>
            获得 Timeline 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineBase.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineBase.IsReverse">
            <summary>
            获得/设置 是否反转
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineBase.IsAlternate">
            <summary>
            获得/设置 是否左右交替出现 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineBase.IsLeft">
            <summary>
            获得/设置 内容是否出现在时间线左侧 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineBase.OnInitializedAsync">
            <summary>
            OnInitializedAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineBase.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimelineItem">
            <summary>
            时间线选项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Content">
            <summary>
            获得/设置 时间线内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Description">
            <summary>
            获得/设置 时间线时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Color">
            <summary>
            获得/设置 时间线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Icon">
            <summary>
            获得/设置 时间线图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Component">
            <summary>
            获得/设置 自定义组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineItem.ToNodeClassString">
            <summary>
            获得 时间线节点样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineItem.ToIconClassString">
            <summary>
            获得 图标样式
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Timer">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ValueString">
            <summary>
            获得/设置 当前进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ValueTitleString">
            <summary>
            获得/设置 Title 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.Value">
            <summary>
            获得/设置 当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.OnTimeout">
            <summary>
            获得/设置 倒计时结束时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.OnCancel">
            <summary>
            获得/设置 取消时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.StrokeWidth">
            <summary>
            获得/设置 进度条宽度 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.IsVibrate">
            <summary>
            获得/设置 倒计时结束时设备震动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.PauseText">
            <summary>
            获得/设置 暂停按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ResumeText">
            <summary>
            获得/设置 继续按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.CancelText">
            <summary>
            获得/设置 取消按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.StarText">
            <summary>
            获得/设置 取消按钮文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Toast">
            <summary>
            Toast 弹出窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.StyleString">
            <summary>
            获得 Toast 组件样式设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.Toasts">
            <summary>
            获得 弹出窗集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.Placement">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.Clear">
            <summary>
            清除 ToastBox 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.SetPlacement(BootstrapBlazor.Components.Placement)">
            <summary>
            设置 Toast 容器位置方法
            </summary>
            <param name="placement"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.ToastBoxElement">
            <summary>
            ToastBox HTML 实例引用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.AutoHide">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.ClassName">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.ProgressClass">
            <summary>
            获得/设置 进度条样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.IconString">
            <summary>
            获得/设置 图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.DelayString">
            <summary>
            获得/设置 弹出框自动关闭时长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.Category">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.Title">
            <summary>
            获得/设置 显示标题 默认为 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.Content">
            <summary>
            获得/设置 Toast Body 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.IsAutoHide">
            <summary>
            获得/设置 是否自动隐藏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.Delay">
            <summary>
            获得/设置 自动隐藏时间间隔
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastBox.Toast">
            <summary>
            获得/设置 Toast 实例
            </summary>
            <value></value>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastBox.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastBox.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastOption">
            <summary>
            Toast 弹出窗参数配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Category">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Host">
            <summary>
            获得/设置 组件主体用于指定弹窗组件 默认为空
            </summary>
            <remarks>设置此属性值可指定弹窗主体组件</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastService">
            <summary>
            Toast 弹出窗服务类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            构造方法
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Show(BootstrapBlazor.Components.ToastOption)">
            <summary>
            Show 方法
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Success(System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用成功快捷方法
            </summary>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Error(System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用错误快捷方法
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="autoHide"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Information(System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用提示信息快捷方法
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="autoHide"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Toggle">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toggle.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToggleBase">
            <summary>
            Toggle 开关组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.ToggleOnClassString">
            <summary>
            获得 ToggleOn 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.Width">
            <summary>
            获得/设置 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.OnText">
            <summary>
            获得/设置 组件 On 时显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.OffText">
            <summary>
            获得/设置 组件 Off 时显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase.Color">
            <summary>
            获得/设置 组件颜色 默认为 Success 颜色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToggleBase.OnClick">
            <summary>
            点击控件时触发此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITooltip">
            <summary>
            ITooltip 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Placement">
            <summary>
            获得/设置 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Title">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Content">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.IsHtml">
            <summary>
            获得/设置 内容是否为 Html
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.PopoverType">
            <summary>
            获得/设置 弹出方式 默认为 Tooltip
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Trigger">
            <summary>
            获得/设置 触发方式 可组合 click focus hover 默认为 focus hover
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITooltipHost">
            <summary>
            ITooltipHost 接口 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltipHost.Tooltip">
            <summary>
            获得/设置 ITooltip 实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Tooltip">
            <summary>
            Tooltip 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.PopoverType">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Content">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.IsHtml">
            <summary>
            获得/设置 显示文字是否为 Html 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Placement">
            <summary>
            获得/设置 位置 默认为 Placement.Auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Title">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Trigger">
            <summary>
            获得/设置 触发方式 可组合 click focus hover 默认为 focus hover
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.TooltipHost">
            <summary>
            获得/设置 ITooltip 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tooltip.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Transfer">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TransferBase">
            <summary>
            Transfer 穿梭框组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftButtonClassName">
            <summary>
            获得/设置 按钮文本样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightButtonClassName">
            <summary>
            获得/设置 按钮文本样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftItems">
            <summary>
            获得/设置 左侧数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightItems">
            <summary>
            获得/设置 右侧数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftPanel">
            <summary>
            获得/设置 左侧选项集合头部复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightPanel">
            <summary>
            获得/设置 右侧选项集合头部复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftButton">
            <summary>
            获得/设置 左侧选项集合头部复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightButton">
            <summary>
            获得/设置 右侧选项集合头部复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.Items">
            <summary>
            获得/设置 组件绑定数据项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.ItemsChanged">
            <summary>
            获得/设置 组件绑定数据项集合选项变化时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftPanelText">
            <summary>
            获得/设置 左侧面板 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightPanelText">
            <summary>
            获得/设置 右侧面板 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftButtonText">
            <summary>
            获得/设置 左侧按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightButtonText">
            <summary>
            获得/设置 右侧按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.LeftPannelSearchPlaceHolderString">
            <summary>
            获得/设置 左侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.RightPannelSearchPlaceHolderString">
            <summary>
            获得/设置 右侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferBase.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferBase.Transfer(System.Collections.Generic.List{BootstrapBlazor.Components.SelectedItem},System.Collections.Generic.List{BootstrapBlazor.Components.SelectedItem})">
            <summary>
            选中数据移动方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferBase.OnSelectedItemsChanged">
            <summary>
            选项状态改变时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferBase.GetButtonState(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.SelectedItem})">
            <summary>
            获得按钮是否可用
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TransferPanelBase">
            <summary>
            TransferPanelBase 穿梭框面板组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.HeaderCheckbox">
            <summary>
            获得/设置 头部复选框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.SearchText">
            <summary>
            获得/设置 搜索关键字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.SearchClass">
            <summary>
            获得 搜索图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.PanelListClassString">
            <summary>
            获得 Panel 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.DisabledString">
            <summary>
            获得 组件是否被禁用属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.Items">
            <summary>
            获得/设置 数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.Text">
            <summary>
            获得/设置 面板显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.OnSelectedItemsChanged">
            <summary>
            获得/设置 选项状态变化时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.SearchPlaceHolderString">
            <summary>
            获得/设置 搜索框的 placeholder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanelBase.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.HeaderCheckState">
            <summary>
            头部复选框初始化值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.OnHeaderCheck(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            左侧头部复选框初始化值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.OnStateChanged(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.OnSearch(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            搜索框文本改变时回调此方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.OnKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            搜索文本框按键回调方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanelBase.ClearSearch">
            <summary>
            清空搜索条件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeBase">
            <summary>
            Tree 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.TreeElement">
            <summary>
            获得/设置 Tree 组件实例引用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.ClassString">
            <summary>
            获得 按钮样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.GetIconClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeItem 图标
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.GetCaretClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeItem 小箭头样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.GetItemClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 当前行样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.GetTreeNodeClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeNode 样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.ActiveItem">
            <summary>
            获得/设置 当前激活的节点实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.ClickToggleNode">
            <summary>
            获得/设置 是否点击节点时展开或者收缩子项 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.ShowCheckbox">
            <summary>
            获得/设置 是否显示 CheckBox 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.ShowIcon">
            <summary>
            获得/设置 是否显示 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.OnTreeItemClick">
            <summary>
            获得/设置 树形控件节点点击时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeBase.OnTreeItemChecked">
            <summary>
            获得/设置 树形控件节点选中时回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.OnClick(BootstrapBlazor.Components.TreeItem)">
            <summary>
            选中节点时触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.OnExpandRow(BootstrapBlazor.Components.TreeItem)">
            <summary>
            更改节点是否展开方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeBase.OnStateChanged(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.TreeItem)">
            <summary>
            节点 Checkbox 状态改变时触发此方法
            </summary>
            <param name="state"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeItem">
            <summary>
            TreeItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Parent">
            <summary>
            获得 父级节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Items">
            <summary>
            获得/设置 子节点数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Key">
            <summary>
            获得/设置 TreeItem 标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Tag">
            <summary>
            获得/设置 TreeItem 相关额外信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.IsActive">
            <summary>
            获得/设置 是否激活
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Checked">
            <summary>
            获得/设置 是否被选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Disabled">
            <summary>
            获得/设置 是否被禁用 默认 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.IsExpanded">
            <summary>
            获得/设置 是否展开 默认 false 不展开
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeItem.AddItem(BootstrapBlazor.Components.TreeItem)">
            <summary>
            添加 Menutem 方法 由 MenuItem 方法加载时调用
            </summary>
            <param name="item">Menutem 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeItem.CascadeSetCheck(System.Boolean)">
            <summary>
            级联设置复选状态
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeItem.CollapseOtherNodes">
            <summary>
            级联设置展开状态方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Upload">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Upload.Text">
            <summary>
            获得/设置 上传按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Upload.ResetText">
            <summary>
            获得/设置 重置按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Upload.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Upload.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Upload.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Upload.Reset">
            <summary>
            组件复位方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Upload.CheckFiles(System.String,System.String,System.Int64)">
            <summary>
            文件上传前检查文件扩展名时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Upload.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadBase">
            <summary>
            文件上传组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.PrevStyleString">
            <summary>
            获得/设置 预览框 Style 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.CircleDiameter">
            <summary>
            获得/设置 圆形进度半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.CircleR">
            <summary>
            获得/设置 半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.CircleLength">
            <summary>
            获得 圆形周长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.MultipleString">
            <summary>
            获得 是否允许多文件上传 默认不允许 IsStack 模式下允许多文件上传
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.DisabledString">
            <summary>
            获得 组件是否被禁用属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.Icon">
            <summary>
            获得/设置 上传按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.ShowPreview">
            <summary>
            获得/设置 是否显示预览 默认不预览
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsStack">
            <summary>
            获得/设置 是否为堆砌效果 默认不预览
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.ShowProgress">
            <summary>
            获得/设置 是否显示上传进度 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.ShowReset">
            <summary>
            获得/设置 是否显示重置按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.UploadUrl">
            <summary>
            获得/设置 上传接口地址 默认值为 "api/Upload"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.Height">
            <summary>
            获得/设置 文件预览框高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsMultiple">
            <summary>
            获得/设置 是否允许多文件上传 默认不允许
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsCircle">
            <summary>
            获得/设置 是否圆形图片框 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsCard">
            <summary>
            获得/设置 是否卡片式预览 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsPhotoWall">
            <summary>
            获得/设置 是否为照片墙效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.AllowFileType">
            <summary>
            获得/设置 允许上传文件扩展名集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.MaxFileLength">
            <summary>
            获得/设置 允许上传文件最大值 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.OnUploaded">
            <summary>
            获得/设置 成功上传后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.OnRemoved">
            <summary>
            获得/设置 成功删除后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.OnFailed">
            <summary>
            获得/设置 上传失败后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase.OnSetHeaders">
            <summary>
            获得/设置 设置请求头回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase.Completed(System.String,System.String)">
            <summary>
            文件上传成功后回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase.Removed(System.String)">
            <summary>
            文件删除成功后回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase.Failed(System.String)">
            <summary>
            文件上传失败后回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase.SetHeaders">
            <summary>
            设置 请求头方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadFile">
            <summary>
            上传组件返回类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.FileName">
            <summary>
            获得/设置 文件名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.OriginFileName">
            <summary>
            获得/设置 原始文件名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Size">
            <summary>
            获得/设置 文件大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Code">
            <summary>
            获得/设置 文件上传结果 0 表示成功 非零表示失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.PrevUrl">
            <summary>
            获得/设置 文件预览地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Error">
            <summary>
            获得/设置 错误信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadHeader">
            <summary>
            Upload 组件 Http 请求头类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadHeader.Name">
            <summary>
            获得 请求头名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadHeader.Value">
            <summary>
            获得 请求头值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadHeader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidateComponent">
            <summary>
            IValidComponent 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateComponent.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            数据验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateComponent.ToggleMessage(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
            <summary>
            显示或者隐藏提示信息方法
            </summary>
            <param name="results"></param>
            <param name="validProperty">是否为模型验证 true 为属性验证 false 为整个模型验证</param>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidateRules">
            <summary>
            IRules 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IValidateRules.Rules">
            <summary>
            获得 Rules 集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateRules.OnRuleAdded(BootstrapBlazor.Components.IValidator)">
            <summary>
            验证组件添加时回调此方法
            </summary>
            <param name="validator"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidateBase`1">
            <summary>
            支持客户端验证的文本框基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.PreviousParsingAttemptFailed">
            <summary>
            获得/设置 上一次转化是否失败 为 true 时表示上一次转化失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.PreviousErrorMessage">
            <summary>
            获得/设置 上一次转化失败错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.NullableUnderlyingType">
            <summary>
            获得/设置 泛型参数 TValue 可为空类型 Type 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.EditContext">
            <summary>
            Gets the associated <see cref="P:BootstrapBlazor.Components.ValidateBase`1.EditContext"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.FieldIdentifier">
            <summary>
            Gets the <see cref="P:BootstrapBlazor.Components.ValidateBase`1.FieldIdentifier"/> for the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ErrorMessage">
            <summary>
            获得/设置 错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValidCss">
            <summary>
            获得/设置 数据合规样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.TooltipMethod">
            <summary>
            获得/设置 Tooltip 命令
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsValid">
            <summary>
            获得/设置 组件是否合规 默认为 null 未检查
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.DisabledString">
            <summary>
            获得 组件是否被禁用属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsShowLabel">
            <summary>
            是否显示 标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValue">
            <summary>
            Gets or sets the current value of the input.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString">
            <summary>
            Gets or sets the current value of the input, represented as a string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ParsingErrorMessage">
            <summary>
            获得/设置 类型转化失败格式化字符串 默认为 {0}字段值必须为{1}类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Value">
            <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
            <example>
            @bind-Value="model.PropertyName"
            </example>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValueChanged">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValueExpression">
            <summary>
            Gets or sets an expression that identifies the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Id">
            <summary>
            获得 当前组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ChildContent">
            <summary>
            获得 子组件 RenderFragment 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ShowLabel">
            <summary>
            获得/设置 是否显示前置标签 默认值为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.DisplayText">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CascadedEditContext">
            <summary>
            获得 父组件的 EditContext 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.EditForm">
            <summary>
            获得 ValidateFormBase 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.FormatValueAsString(`0)">
            <summary>
            Formats the value as a string. Derived classes can override this to determine the formating used for <see cref="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString"/>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            Parses a string to create an instance of <typeparamref name="TValue"/>. Derived classes can override this to change how
            <see cref="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString"/> interprets incoming values.
            </summary>
            <param name="value">The string value to be parsed.</param>
            <param name="result">An instance of <typeparamref name="TValue"/>.</param>
            <param name="validationErrorMessage">If the value could not be parsed, provides a validation error message.</param>
            <returns>True if the value could be parsed; otherwise false.</returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.FieldClass">
            <summary>
            Gets a string that indicates the status of the field being edited. This will include
            some combination of "modified", "valid", or "invalid", depending on the status of the field.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CssClass">
            <summary>
            Gets a CSS class string that combines the <c>class</c> attribute and <see cref="P:BootstrapBlazor.Components.ValidateBase`1.FieldClass"/>
            properties. Derived components should typically use this value for the primary HTML element's
            'class' attribute.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.RetrieveMethod">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.RetrieveTitle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Rules">
            <summary>
            获得 数据验证方法集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnRuleAdded(BootstrapBlazor.Components.IValidator)">
            <summary>
            验证组件添加时调用此方法
            </summary>
            <param name="validator"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            属性验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.ToggleMessage(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
            <summary>
            显示/隐藏验证结果方法
            </summary>
            <param name="results"></param>
            <param name="validProperty">是否对本属性进行数据验证</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnValidate(System.Boolean)">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid">检查结果</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator">
            <summary>
            DataAnnotationsValidator 验证组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.CurrentEditContext">
            <summary>
            获得/设置 当前编辑数据上下文
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.EditForm">
            <summary>
            获得/设置 当前编辑窗体上下文
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.OnInitialized">
            <summary>
            初始化方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorEditContextDataAnnotationsExtensions">
            <summary>
            EditContextDataAnotation 扩展操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorEditContextDataAnnotationsExtensions.AddEditContextDataAnnotationsValidation(Microsoft.AspNetCore.Components.Forms.EditContext,BootstrapBlazor.Components.ValidateFormBase)">
            <summary>
            添加数据合规检查
            </summary>
            <param name="editContext">The <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.</param>
            <param name="editForm"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorEditContextDataAnnotationsExtensions.GetPropertyValue(Microsoft.AspNetCore.Components.Forms.FieldIdentifier@)">
            <summary>
            获取 FieldIdentifier 属性值
            </summary>
            <param name="fieldIdentifier"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidateForm">
            <summary>
            ValidateForm 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnSubmit">
            <summary>
            A callback that will be invoked when the form is submitted.
            If using this parameter, you are responsible for triggering any validation
            manually, e.g., by calling <see cref="M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnValidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> is determined to be valid.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnInvalidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> is determined to be invalid.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidateFormBase">
            <summary>
            ValidateFormBase 支持客户端验证组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateFormBase.Model">
            <summary>
            Specifies the top-level model object for the form. An edit context will
            be constructed for this model. If using this parameter, do not also supply
            a value for <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateFormBase.ChildContent">
            <summary>
            Specifies the content to be rendered inside this
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateFormBase.ValidatorCache">
            <summary>
            验证组件缓存
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateFormBase.AddValidator(System.ValueTuple{System.Type,System.String},BootstrapBlazor.Components.IValidateComponent)">
            <summary>
            添加数据验证组件到 EditForm 中
            </summary>
            <param name="key"></param>
            <param name="comp"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateFormBase.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            EditModel 数据模型验证方法
            </summary>
            <param name="model"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateFormBase.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            字段验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.EqualToValidator">
            <summary>
            值相等验证组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EqualToValidator.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EqualToValidator.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EqualToValidator.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EqualToValidator.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EqualToValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidator">
            <summary>
            IValidator 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IValidator.ErrorMessage">
            <summary>
            获得/设置 错误描述信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MinValidator`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MinValidator`1.Value">
            <summary>
            获得/设置 最小值数值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MinValidator`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MinValidator`1.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.RequiredValidator">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RequiredValidator.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RequiredValidator.AllowEmptyString">
            <summary>
            获得/设置 是否允许空字符串 默认 false 不允许
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RequiredValidator.AllowEmptyList">
            <summary>
            获得/设置 是否允许空集合 默认 false 不允许
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RequiredValidator.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RequiredValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.StringLengthValidator">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StringLengthValidator.Localizer">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StringLengthValidator.Length">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringLengthValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidatorComponentBase">
            <summary>
            验证组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidatorComponentBase.ErrorMessage">
            <summary>
            获得/设置 错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidatorComponentBase.Validators">
            <summary>
            获得/设置 IValidateRules 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidatorComponentBase.OnInitialized">
            <summary>
            初始化方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidatorComponentBase.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Alignment">
            <summary>
            对齐方式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BreakPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Small">
            <summary>
            小屏幕 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Medium">
            <summary>
            中屏幕 768px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Large">
            <summary>
            大屏幕 992px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.ExtraLarge">
            <summary>
            超大屏幕 1200px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonStyle">
            <summary>
            按钮样式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.None">
            <summary>
            默认风格
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.Round">
            <summary>
            圆角按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.Circle">
            <summary>
            圆形胶囊按钮
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonType">
            <summary>
            按钮类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Button">
            <summary>
            正常按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Submit">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Reset">
            <summary>
            重置按钮
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CalendarViewModel">
            <summary>
            日历组件显示模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CalendarViewModel.Month">
            <summary>
            月视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CalendarViewModel.Week">
            <summary>
            周视图
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxState">
            <summary>
            CheckBox 组件状态枚举值
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.UnChecked">
            <summary>
            未选中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.Checked">
            <summary>
            选中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.Mixed">
            <summary>
            混合模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Color">
            <summary>
            颜色枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.None">
            <summary>
            无颜色
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Active">
            <summary>
            active
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Primary">
            <summary>
            primary
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Secondary">
            <summary>
            secondary
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Danger">
            <summary>
            danger
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Warning">
            <summary>
            warning
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Info">
            <summary>
            info
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Light">
            <summary>
            light
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Dark">
            <summary>
            dark
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Link">
            <summary>
            link
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerViewModel">
            <summary>
            DateTimePicker 组件视图显示模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewModel.Date">
            <summary>
            年月日模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewModel.DateTime">
            <summary>
            年月日时分秒模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewModel.Year">
            <summary>
            年视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewModel.Month">
            <summary>
            月视图
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Direction">
            <summary>
            下拉框枚举类
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropdown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropup">
            <summary>
            Dropup
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropleft">
            <summary>
            Dropleft
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropright">
            <summary>
            Dropright
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DropdownType">
            <summary>
            下拉框类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DropdownType.DropdownMenu">
            <summary>
            下拉菜单
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DropdownType.ButtonGroup">
            <summary>
            组合按钮
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterAction">
            <summary>
            关系运算符
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.Contains">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.NotContains">
            <summary>
            不包含
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterLogic">
            <summary>
            逻辑运算符
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterLogic.And">
            <summary>
            并且
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterLogic.Or">
            <summary>
            或者
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Placement">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.AutoStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.AutoEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.TopStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.TopEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.RightStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.RightEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.BottomStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.BottomEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.LeftStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.LeftEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverType">
            <summary>
            弹出框类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.PopoverType.Tooltip">
            <summary>
            工具条
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.PopoverType.Popover">
            <summary>
            弹出层
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Size">
            <summary>
            Size 枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.None">
            <summary>
            无设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.ExtraSmall">
            <summary>
            xs 超小设置 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Small">
            <summary>
            sm 小设置 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Medium">
            <summary>
            md 中等设置 768px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Large">
            <summary>
            lg 大设置 992px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.ExtraLarge">
            <summary>
            xl 超大设置 1200px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SortOrder">
            <summary>
            排序顺序枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Unset">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Asc">
            <summary>
            升序 0-9 A-Z
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Desc">
            <summary>
            降序 9-0 Z-A
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepStatus">
            <summary>
            步骤状态枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Wait">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Process">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Finish">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Success">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalCategory">
            <summary>
            SweetAlert 提示类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Success">
            <summary>
            成功信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Warning">
            <summary>
            警告信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Information">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Question">
            <summary>
            疑问信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableRenderModel">
            <summary>
            Table 视图枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderModel.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderModel.Table">
            <summary>
            Table 布局适用于大屏幕
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderModel.CardView">
            <summary>
            卡片式布局适用于小屏幕
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerCellViewModel">
            <summary>
            时间选择组件视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewModel.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewModel.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewModel.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastCategory">
            <summary>
            Toast 组件类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Information">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EnumExtensions">
            <summary>
            枚举类型扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToDescriptionString``1(``0)">
            <summary>
            获取 DescriptionAttribute 标签方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToDescriptionString(System.Type,System.String)">
            <summary>
            通过字段名称获取 DescriptionAttribute 标签值
            </summary>
            <param name="type"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToSelectList(System.Type,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            获取指定枚举类型的枚举值集合，默认通过 Description 标签显示 DisplayName 未设置 Description 标签时显示字段名称
            </summary>
            <param name="type"></param>
            <param name="addtionalItem"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.IsEnum(System.Type)">
            <summary>
            判断类型是否为枚举类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JSRuntimeExtensions">
            <summary>
            JSRuntime 扩展操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JSRuntimeExtensions.InvokeVoidAsync(Microsoft.JSInterop.IJSRuntime,System.Object,System.String,System.Object[])">
            <summary>
            调用 JSInvoke 方法
            </summary>
            <param name="jsRuntime">IJSRuntime 实例</param>
            <param name="el">Element 实例或者组件 Id</param>
            <param name="func">Javascript 方法</param>
            <param name="args">Javascript 参数</param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSRuntimeExtensions.InvokeAsync``1(Microsoft.JSInterop.IJSRuntime,System.Object,System.String,System.Object[])">
            <summary>
            调用 JSInvoke 方法
            </summary>
            <param name="jsRuntime">IJSRuntime 实例</param>
            <param name="el">Element 实例或者组件 Id</param>
            <param name="func">Javascript 方法</param>
            <param name="args">Javascript 参数</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ObjectExtensions">
            <summary>
            Object 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.Clone``1(``0)">
            <summary>
            泛型 Clone 方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.Reset``1(``0)">
            <summary>
            重置对象属性值到默认值方法
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.ConvertToPercentString(System.String)">
            <summary>
            转化为带单位的字符串 [% px] => [% px] [int] => [int]px
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsNumber(System.Type)">
            <summary>
            检查是否为 Number 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsDateTime(System.Type)">
            <summary>
            检查是否为 DateTime 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.GetTypeDesc(System.Type)">
            <summary>
            通过类型获取类型描述文字
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.ToDictionary``2(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            增加扩展方法 List 转化为 字典集合
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CssBuilder">
            <summary>
            Css 生成操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.Default(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.#ctor(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String)">
            <summary>
            Adds a raw string to the builder that will be concatenated with the next class or value added to the builder.
            </summary>
            <param name="value"></param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String,System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.Func{System.String},System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(BootstrapBlazor.Components.CssBuilder,System.Boolean)">
            <summary>
            Adds a conditional nested CssBuilder to the builder with space separator.
            </summary>
            <param name="builder">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(BootstrapBlazor.Components.CssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="builder">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClassFromAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional CSS Class when it exists in a dictionary to the builder with space separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyleFromAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional Style when it exists in a dictionary to the builder with space separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.Build">
            <summary>
            Finalize the completed CSS Classes as a string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Offset">
            <summary>
            物体偏移量类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Top">
            <summary>
            获得/设置 X 轴偏移量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Left">
            <summary>
            获得/设置 Y 轴偏移量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Width">
            <summary>
            获得/设置 宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Height">
            <summary>
            获得/设置 高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RenderTemplate.ChildContent">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.HandwrittenBase64">
            <summary>
            Handwritten 手写签名
            </summary>
            <summary>
            扫码结果回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.Close">
            <summary>
            关闭扫码框回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.Result">
            <summary>
            扫码结果
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.ShowHandwritten">
            <summary>
            显示扫码框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Text">
            <summary>
            获得/设置 单元格内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.ScreenSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.RenderModelResponsiveWidth">
             <summary>
            
             </summary>
        </member>
        <member name="T:BootstrapBlazor.Localization.Json.StringLocalizer">
            <summary>
            IStringLocalizer 实现类
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Localization.Json.JsonLocalizationOptions">
            <summary>
            LocalizationOptions 配置类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonLocalizationOptions.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Localization.Json.JsonStringLocalizer">
            <summary>
            JsonStringLocalizer 实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizer.#ctor(System.Reflection.Assembly,System.String,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            构造函数
            </summary>
            <param name="assembly"></param>
            <param name="resourceName"></param>
            <param name="typeName"></param>
            <param name="logger"></param>
        </member>
        <member name="P:BootstrapBlazor.Localization.Json.JsonStringLocalizer.Item(System.String)">
            <summary>
            通过指定键值获取多语言值信息索引
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Localization.Json.JsonStringLocalizer.Item(System.String,System.Object[])">
            <summary>
            带格式化参数的通过指定键值获取多语言值信息索引
            </summary>
            <param name="name"></param>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizer.GetAllStrings(System.Boolean)">
            <summary>
            获取当前语言的所有资源信息
            </summary>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizer.WithCulture(System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizer.GetAllStrings(System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="includeParentCultures"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizer.GetStringSafely(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Localization.Json.JsonStringLocalizerFactory">
            <summary>
            IStringLocalizerFactory 实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizerFactory.#ctor(Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Localization.Json.JsonLocalizationOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="localizationOptions"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizerFactory.Create(System.Type)">
            <summary>
            通过资源类型创建 IStringLocalizer 方法
            </summary>
            <param name="resourceSource"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizerFactory.Create(System.String,System.String)">
            <summary>
            通过 baseName 与 location 创建 IStringLocalizer 方法
            </summary>
            <param name="baseName"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Localization.Json.JsonStringLocalizerFactory.CreateJsonStringLocalizer(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            创建 IStringLocalizer 实例方法
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions">
            <summary>
            BootstrapBlazor 服务扩展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.AddBootstrapBlazor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加 BootstrapBlazor 服务
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ConfigureOptions`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ConfigureOptions`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.JsonLocalizationServiceCollectionExtensions">
            <summary>
            多语言支持注入服务扩展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JsonLocalizationServiceCollectionExtensions.AddJsonLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Localization.Json.JsonLocalizationOptions})">
            <summary>
            注入 Json 格式多语言服务
            </summary>
            <param name="services">IServiceCollection 实例</param>
            <param name="setupAction">JsonLocalizationOptions 配置回调方法</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.Localization.StringLocalizerExtensions">
            <summary>
            IStringLocalizer 扩展方法
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Localization.StringLocalizerExtensions.GetString``1(Microsoft.Extensions.Localization.IStringLocalizer,System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            通过 Lambda 表达式获取指定类型的语言文字信息
            </summary>
            <typeparam name="TResource"></typeparam>
            <param name="stringLocalizer"></param>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.Forms.FieldIdentifierExtensions">
            <summary>
            FieldIdentifier 扩展操作类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Forms.FieldIdentifierExtensions.GetDisplayName(Microsoft.AspNetCore.Components.Forms.FieldIdentifier)">
            <summary>
            获取显示名称方法
            </summary>
            <param name="fieldIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Forms.FieldIdentifierExtensions.GetDisplayName(System.Object,System.String)">
            <summary>
            获取显示名称方法
            </summary>
            <param name="model">模型实例</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Forms.FieldIdentifierExtensions.GetDisplayName(System.Type,System.String)">
            <summary>
            获取显示名称方法
            </summary>
            <param name="modelType">模型类型</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.LambdaExtensions">
            <summary>
            Lambda 表达式扩展类
            </summary>
        </member>
        <member name="T:System.Linq.LambdaExtensions.ComboExpressionVisitor">
            <summary>
            通过base.Visit(node)返回的Expression统一node变量
            </summary>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ComboExpressionVisitor.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>
            构造
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ComboExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.FilterKeyValueAction})">
            <summary>
            指定 FilterKeyValueAction 集合获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ExpressionAndLambda``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>
            表达式取 and 逻辑操作方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="expressions"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterFunc``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IFilterAction})">
            <summary>
            指定 IFilter 集合获取委托
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IFilterAction})">
            <summary>
            指定 IFilter 集合获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            指定 FilterKeyValueAction 获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterFunc``1(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            指定 FilterKeyValueAction 获取委托
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetSortLambda``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.String,BootstrapBlazor.Components.SortOrder)">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="sortName"></param>
            <param name="sortOrder"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Format(System.Object,System.String,System.IFormatProvider)">
            <summary>
            任意类型格式化方法
            </summary>
            <param name="source"></param>
            <param name="format"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFormatLambda(System.Object)">
            <summary>
            获取 Format 方法的 Lambda 表达式
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Format(System.Object,System.IFormatProvider)">
            <summary>
            任意类型格式化方法
            </summary>
            <param name="source"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFormatProviderLambda(System.Object)">
            <summary>
            获取 Format 方法的 Lambda 表达式
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetGreaterThanOrEqualLambda``1(``0)">
            <summary>
            大于等于 Lambda 表达式
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GreaterThanOrEqual``1(``0,System.Object)">
            <summary>
            
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetPropertyValue``2(``0,System.String)">
            <summary>
            通过属性名称获取其实例值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="t"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetPropertyValueLambda``2(``0,System.String)">
            <summary>
            获取属性方法 Lambda 表达式
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="item"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.SetPropertyValue``2(``0,System.String,``1)">
            <summary>
            根据属性名称设置属性的值
            </summary>
            <typeparam name="TItem">对象类型</typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="t">对象</param>
            <param name="name">属性名</param>
            <param name="value">属性的值</param>
        </member>
        <member name="M:System.Linq.LambdaExtensions.SetPropertyValueLambda``2(``0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="t"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.LambdaExtensions.FuncEx`3">
            <summary>
            
            </summary>
            <typeparam name="TIn"></typeparam>
            <typeparam name="TOut"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="outValue"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.TryParse``1">
            <summary>
            尝试使用 TryParse 进行数据转换
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
